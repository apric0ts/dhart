<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="md_src__csharp_docs_markdown_mainpage" kind="page">
    <compoundname>md_src_Csharp_docs_markdown_mainpage</compoundname>
    <title>Analysis</title>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Analysis of the Environment for ADAPT</para>
<sect1 id="md_src__csharp_docs_markdown_mainpage_1autotoc_md47">
<title>C# Documentation</title>
<sect2 id="md_src__csharp_docs_markdown_mainpage_1autotoc_md48">
<title>Getting Started</title>
<para><itemizedlist>
<listitem><para><ref refid="_unity_tutorials" kindref="compound">Unity Tutorial Series</ref></para>
</listitem></itemizedlist>
</para>
<para>This guide will describe how to retrieve the contents of this repository, and build Analysis from source.</para>
<para><heading level="2">Please note: Analysis is currently designed to run on a PC<linebreak/>
 running the Windows 10 operating system.</heading>
</para>
<para>Also note: This guide is a &apos;work-in-progress&apos; and subject to change.</para>
<para><heading level="2">Pre-requisites</heading>
</para>
<para><bold>Git for Windows:</bold><linebreak/>
 If you do not already have Git for Windows on your machine,<linebreak/>
 please download and install Git for Windows at <ulink url="https://gitforwindows.org/">https://gitforwindows.org/</ulink></para>
<para><bold>Microsoft Visual Studio 2019:</bold><linebreak/>
 <ulink url="https://visualstudio.microsoft.com/downloads/">https://visualstudio.microsoft.com/downloads/</ulink><linebreak/>
 You may use the Community edition.</para>
<para><bold>CMake (Windows win64-x64)</bold><linebreak/>
 <ulink url="https://cmake.org/download/">https://cmake.org/download/</ulink></para>
<para>Once the software above is installed on your machine, you may continue with the following:</para>
<para><heading level="3">0. Using Git Bash</heading>
</para>
<para>Open <bold>Git Bash</bold>. Git Bash (MINGW64) begins at <computeroutput>~</computeroutput>, your home directory.<linebreak/>
 You may remain here, or navigate to a directory of your choice.<linebreak/>
 In the next step, you will clone the <bold>Analysis</bold> repository.</para>
<para><heading level="3">1. Cloning the repository</heading>
</para>
<para>Type <computeroutput><bold>git clone <ulink url="mailto:git@git.njit.edu">git@git.njit.edu</ulink>:ADAPT/Analysis.git</bold></computeroutput> at the prompt<linebreak/>
 and hit ENTER. The Analysis repository will then be cloned to your local machine.</para>
<para>Now that a local copy of the <bold>Analysis</bold> repository is on your machine,<linebreak/>
 you may build the project with either:<itemizedlist>
<listitem><para>Microsoft Visual Studio 2019</para>
</listitem><listitem><para>cmake-gui (CMake&apos;s standalone client)</para>
</listitem></itemizedlist>
</para>
<para><heading level="2">Building with Microsoft Visual Studio 2019</heading>
</para>
<para><heading level="3">0. Opening Visual Studio</heading>
</para>
<para>Open <bold>Microsoft Visual Studio 2019</bold>. After seeing the splash/welcome screen,<linebreak/>
 please click the button that reads <bold>Open a local folder</bold>.</para>
<para><heading level="3">1. Opening the Analysis repository</heading>
</para>
<para>When the <bold>Browse</bold> window appears, navigate to the <computeroutput><bold>Analysis</bold></computeroutput> folder<linebreak/>
 (the repository that you had cloned) on your local machine.<linebreak/>
 Then, navigate to <computeroutput><bold>src</bold>.</computeroutput><linebreak/>
 Click the <bold>Select</bold> folder button to confirm.<linebreak/>
</para>
<para><heading level="3">2. Revealing the Solution Explorer</heading>
</para>
<para>If the <bold>Solution Explorer</bold> view is not already open, you may open by<linebreak/>
 navigating to <bold>View &gt; Solution Explorer</bold>, or alternatively,<linebreak/>
 you can also use the <bold>Ctrl + Alt + L</bold> shortcut to reveal Solution Explorer.<linebreak/>
 Here, you can examine the sources imported by Visual Studio.<linebreak/>
</para>
<para><heading level="3">3. Choosing a build version</heading>
</para>
<para>There are <bold>two</bold> build versions for <bold>Analysis</bold>:<itemizedlist>
<listitem><para>x64-Debug<linebreak/>
</para>
</listitem><listitem><para>x64-Release<linebreak/>
</para>
</listitem></itemizedlist>
</para>
<para>To change between build versions,<linebreak/>
 navigate (move your cursor) over to the top-left portion of Visual Studio,<linebreak/>
 and you will see a drop-down bar <ndash/> <bold>x64-Debug</bold> is selected by default.</para>
<para>If you want to build the <bold>x64-Release</bold> version of <bold>Analysis</bold>,<linebreak/>
 change the option in the drop-down bar to <bold>x64-Release</bold>.</para>
<para><heading level="3">4. Building the repository</heading>
</para>
<para><bold>We are now ready to build Analysis.</bold><linebreak/>
 <bold>CMake</bold> is used to aid in the compilation process.<linebreak/>
</para>
<para>To build, navigate to <bold>Build &gt; Build All</bold>,<linebreak/>
 or you may use the <bold>Ctrl + Shift + B</bold> keyboard shortcut.<linebreak/>
</para>
<para><bold>You have now built the sources for Analysis.</bold><linebreak/>
 You can find the build files in <computeroutput><bold>.\Analysis\src\out\build\x64-Debug</bold></computeroutput></para>
<para><heading level="2">Building with CMake&apos;s standalone client (cmake-gui)</heading>
</para>
<para>Please ensure that you have installed:<itemizedlist>
<listitem><para>Microsoft Visual Studio 2019 (you will get the Visual C++ compiler along with it)</para>
</listitem><listitem><para>CMake</para>
</listitem></itemizedlist>
</para>
<para>Also ensure that you have a local copy of the Analysis repository.</para>
<para><heading level="3">0. Opening cmake-gui</heading>
</para>
<para>Open the <bold>CMake (cmake-gui)</bold> application. (Hit the Windows key, and type &apos;CMake&apos;)</para>
<para><heading level="3">1. Browse source...</heading>
</para>
<para>Hit the <bold>&apos;Browse Source...&apos;</bold> button to the right of the<linebreak/>
 <bold>&apos;Where is the source code:&apos;</bold> text field.<linebreak/>
</para>
<para><heading level="3">2. Selecting the source code directory</heading>
</para>
<para>In the window that appears (titled <bold>&apos;Enter Path to Source&apos;</bold>),<linebreak/>
 navigate to the local copy of <bold>Analysis</bold> on your machine.<linebreak/>
 <linebreak/>
 Then, navigate to the <bold>&apos;src&apos;</bold> subdirectory. Click <bold>&apos;Select Folder&apos;</bold>. <linebreak/>
 The <bold>&apos;Where is the source code&apos;</bold> field should read:<linebreak/>
 <computeroutput>C:/[YOUR_PATH_HERE]/Analysis/src</computeroutput></para>
<para><heading level="3">3. Browse build...</heading>
</para>
<para>Hit the <bold>&apos;Browse Build...&apos;</bold> button to the right of the<linebreak/>
 <bold>&apos;Where to build the binaries:&apos;</bold> text field.<linebreak/>
</para>
<para><heading level="3">4. Selecting the build directory</heading>
</para>
<para>In the window that appears (titled <bold>&apos;Enter Path to Build&apos;</bold>),<linebreak/>
 navigate to the local copy of <bold>Analysis</bold> on your machine.<linebreak/>
 <linebreak/>
 Then, navigate to the <bold>&apos;build&apos;</bold> subdirectory. Click <bold>&apos;Select Folder.&apos;</bold> <linebreak/>
 The <bold>&apos;Where to build the binaries&apos;</bold> field should read:<linebreak/>
 <computeroutput>C:/[YOUR_PATH_HERE]/Analysis/build</computeroutput></para>
<para><heading level="3">5. Confirming your configuration</heading>
</para>
<para>Hit the <bold>&apos;Configure&apos;</bold> button in the left-center area of the cmake-gui window.</para>
<para><heading level="3">6. Selecting compiler options</heading>
</para>
<para>In the dialogue box that appears,<linebreak/>
 for the <bold>&apos;Specify the generator for this project&apos;</bold> dropdown box, ensure that <bold>&apos;Visual Studio 16 2019&apos;</bold> is selected.<linebreak/>
</para>
<para>Ensure that the <bold>&apos;Use default native compilers&apos;</bold> radio button is selected. Do not fill in the remaining text fields.<linebreak/>
</para>
<para>Then, click <bold>&apos;Finish&apos;</bold>.</para>
<para><heading level="3">7. Building the repository/choosing a build version</heading>
</para>
<para>As stated previously, there are <bold>two</bold> build versions for <bold>Analysis</bold>:<itemizedlist>
<listitem><para>x64-Debug<linebreak/>
</para>
</listitem><listitem><para>x64-Release<linebreak/>
</para>
</listitem></itemizedlist>
</para>
<para>CMake will build the project.<linebreak/>
 <bold>Note: The build will appear to fail at first. </bold><linebreak/>
 The remainder of the directions for this step will rectify this,<linebreak/>
 and you will also be able to select your desired build version. <linebreak/>
<linebreak/>
 In the center of the cmake-gui window, you will see<linebreak/>
 a <bold>&apos;Name&apos;</bold> and <bold>&apos;Value&apos;</bold> table, in red highlighting.<linebreak/>
</para>
<para>Next to <bold>&apos;CMAKE_CONFIGURATION_TYPES&apos;</bold>, click the text field<linebreak/>
 that resides underneath the <bold>&apos;Value&apos;</bold> column.<linebreak/>
</para>
<para>To select the build version,<linebreak/>
 change the selected field to <bold>Debug</bold>, for the x64-Debug version,<linebreak/>
 or <bold>Release</bold>, for the x64-Release version, whichever is desired.<linebreak/>
</para>
<para>Then, click <bold>&apos;Configure&apos;</bold>.</para>
<para>The build files generated by CMake will reside in<linebreak/>
 <bold><computeroutput>C:/[YOUR_PATH_HERE]/Analysis/build</computeroutput></bold></para>
</sect2>
</sect1>
<sect1 id="md_src__csharp_docs_markdown_mainpage_1autotoc_md49">
<title>Documentation</title>
<para>Documentation for <bold>Analysis</bold> can be found in .\Analysis\docs\</para>
<para>The codebase is comprised of sources from: <linebreak/>
<itemizedlist>
<listitem><para>C++ (see .\Analysis\docs\C++)</para>
</listitem><listitem><para>C# (see .\Analysis\docs\C#)</para>
</listitem><listitem><para>Python (see .\Analysis\docs\Python Docs) </para>
</listitem></itemizedlist>
</para>
</sect1>
    </detaileddescription>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="4__reading__mesh__from__unity_8md" kind="file" language="Markdown">
    <compoundname>4_reading_mesh_from_unity.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Reading<sp/>a<sp/>Mesh<sp/>From<sp/>Unity<sp/>{#MeshFromUnity}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Previous<sp/>Tutorial:<sp/>[The<sp/>Graph<sp/>Generator](@ref<sp/>GeneratingAGraph)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[TOC]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Intro</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>this<sp/>tutorial<sp/>we&apos;ll<sp/>be<sp/>using<sp/>the<sp/>project<sp/>created<sp/>in<sp/>the<sp/>first<sp/>tutorial:<sp/>[Project<sp/>Setup](@ref<sp/>UnityProjectSetup),<sp/>and<sp/>we&apos;ll<sp/>be<sp/>using<sp/>concepts<sp/>and<sp/>code<sp/>covered<sp/>in<sp/>the<sp/>previous<sp/>guides.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>this<sp/>guide<sp/>we<sp/>will<sp/>cover:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">-<sp/>Assigning<sp/><sp/>a<sp/>game<sp/>object<sp/>to<sp/>a<sp/>script<sp/>so<sp/>it<sp/>can<sp/>be<sp/>referenced<sp/>by<sp/>code.</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Accessing<sp/>the<sp/>components<sp/>of<sp/>a<sp/>Game<sp/>Object</highlight></codeline>
<codeline><highlight class="normal">-<sp/>Transforming<sp/>MeshInfo<sp/>instances<sp/>to<sp/>Z-Up</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Scene<sp/>Setup</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Up<sp/>until<sp/>this<sp/>point,<sp/>we<sp/>haven&apos;t<sp/>needed<sp/>to<sp/>interact<sp/>with<sp/>the<sp/>Unity<sp/>scene,<sp/>aside<sp/>from<sp/>attaching<sp/>a<sp/>script<sp/>to<sp/>the<sp/>Main<sp/>Camera<sp/>object<sp/>that<sp/>is<sp/>placed<sp/>by<sp/>default.<sp/>For<sp/>us<sp/>to<sp/>demonstrate<sp/>reading<sp/>geometry<sp/>from<sp/>the<sp/>scene,<sp/>we<sp/>will<sp/>use<sp/>the<sp/>Unity<sp/>editor<sp/>to<sp/>create<sp/>a<sp/>plane<sp/>in<sp/>the<sp/>scene<sp/>that&apos;s<sp/>similar<sp/>to<sp/>the<sp/>plane<sp/>we<sp/>previously<sp/>created<sp/>in<sp/>code,<sp/>but<sp/>half<sp/>the<sp/>size.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Blank<sp/>Scene](walkthroughs/unity/4_mesh_reading/start_point.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>begin,<sp/>open<sp/>the<sp/>Unity<sp/>project<sp/>from<sp/>[Unity<sp/>Project<sp/>Setup](@ref<sp/>UnityProjectSetup).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Creating<sp/>the<sp/>Plane</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Plane<sp/>Created](walkthroughs/unity/4_mesh_reading/create_plane.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.1**:<sp/>*Creating<sp/>a<sp/>plane<sp/>using<sp/>the<sp/>menu<sp/>bar*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Using<sp/>the<sp/>menubar<sp/>at<sp/>the<sp/>top<sp/>of<sp/>the<sp/>screen<sp/>select<sp/>GameObject<sp/>&gt;<sp/>3D<sp/>Object<sp/>&gt;<sp/>Plane.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Once<sp/>clicked,<sp/>a<sp/>new<sp/>10x10<sp/>plane<sp/>will<sp/>be<sp/>created<sp/>at<sp/>the<sp/>center<sp/>of<sp/>the<sp/>scene<sp/>window&apos;s<sp/>view.<sp/>The<sp/>plane<sp/>we<sp/>created<sp/>in<sp/>code<sp/>was<sp/>centered<sp/>on<sp/>the<sp/>origin,<sp/>but<sp/>this<sp/>plane<sp/>isn&apos;t<sp/>since<sp/>it<sp/>was<sp/>created<sp/>where<sp/>the<sp/>scene<sp/>editor&apos;s<sp/>camera<sp/>was<sp/>looking.<sp/>We<sp/>must<sp/>reset<sp/>this<sp/>plane<sp/>to<sp/>the<sp/>origin<sp/>before<sp/>moving<sp/>any<sp/>further.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Resetting<sp/>the<sp/>Plane&apos;s<sp/>Position</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Transform<sp/>Visible](walkthroughs/unity/4_mesh_reading/look_at_transforms.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.2**:<sp/>*Highlighted:<sp/>The<sp/>plane&apos;s<sp/>x,y,z<sp/>position*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Left<sp/>Click<sp/>on<sp/>the<sp/>newly<sp/>created<sp/>plane<sp/>and<sp/>look<sp/>at<sp/>**Transform**<sp/>header<sp/>in<sp/>the<sp/>Inspector<sp/>located<sp/>at<sp/>the<sp/>right<sp/>sidebar.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Reset<sp/>Position](walkthroughs/unity/4_mesh_reading/reset_position.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.3**:<sp/>*Resetting<sp/>the<sp/>plane&apos;s<sp/>position*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Under<sp/>**Transform**<sp/>you<sp/>can<sp/>see<sp/>the<sp/>plane&apos;s<sp/>position,<sp/>rotation<sp/>and<sp/>scale<sp/>within<sp/>the<sp/>scene.<sp/>To<sp/>set<sp/>the<sp/>plane&apos;s<sp/>position<sp/>to<sp/>the<sp/>origin,<sp/>left<sp/>on<sp/>the<sp/>three<sp/>dots<sp/>to<sp/>the<sp/>right<sp/>of<sp/>the<sp/>transform<sp/>header,<sp/>and<sp/>select<sp/>*Reset<sp/>Position*.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Plane<sp/>After<sp/>Reset<sp/>Position](walkthroughs/unity/4_mesh_reading/resetted_plane.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.4**:<sp/>*The<sp/>plane<sp/>centered<sp/>at<sp/>the<sp/>scene<sp/>origin*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">After<sp/>clicking<sp/>that<sp/>button,<sp/>your<sp/>plane<sp/>should<sp/>be<sp/>moved<sp/>to<sp/>the<sp/>origin<sp/>like<sp/>in<sp/>Figure<sp/>4.4.<sp/>Note<sp/>that<sp/>the<sp/>X,<sp/>Y,<sp/>and<sp/>Z<sp/>of<sp/>the<sp/>plane&apos;s<sp/>position<sp/>in<sp/>the<sp/>Inspector<sp/>are<sp/>all<sp/>set<sp/>to<sp/>0.<sp/>Ensure<sp/>that<sp/>the<sp/>rest<sp/>of<sp/>the<sp/>variables<sp/>in<sp/>the<sp/>transform<sp/>header<sp/>match<sp/>that<sp/>of<sp/>Figure<sp/>4.4.<sp/>Now<sp/>that<sp/>we<sp/>have<sp/>the<sp/>plane<sp/>ready<sp/>to<sp/>go,<sp/>we<sp/>can<sp/>begin<sp/>working<sp/>on<sp/>the<sp/>script<sp/>to<sp/>get<sp/>its<sp/>vertices<sp/>and<sp/>triangles.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Writing<sp/>the<sp/>Script</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Blank<sp/>Visual<sp/>Studio<sp/>Page](walkthroughs/unity/1_project_setup/visual_studio_human_factors_reference.png)</highlight></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.5**<sp/>*An<sp/>Empty<sp/>Script*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Double<sp/>click<sp/>on<sp/>HFExampleScript<sp/>that<sp/>we<sp/>created<sp/>in<sp/>the<sp/>first<sp/>tutorial<sp/>to<sp/>open<sp/>up<sp/>Visual<sp/>Studio<sp/>if<sp/>it<sp/>isn&apos;t<sp/>open<sp/>already.<sp/>You<sp/>should<sp/>see<sp/>a<sp/>blank<sp/>page<sp/>like<sp/>the<sp/>above.<sp/>If<sp/>you&apos;re<sp/>coming<sp/>from<sp/>a<sp/>previous<sp/>tutorial,<sp/>*please<sp/>clear<sp/>it<sp/>so<sp/>it<sp/>matches<sp/>this*.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Just<sp/>like<sp/>the<sp/>previous<sp/>tutorials,<sp/>we&apos;re<sp/>going<sp/>to<sp/>declare<sp/>which<sp/>namespaces<sp/>this<sp/>script<sp/>will<sp/>use<sp/>in<sp/>the<sp/>using<sp/>section.<sp/>For<sp/>now<sp/>we<sp/>only<sp/>need<sp/>one<sp/>using<sp/>declaration.<sp/>Add<sp/>this<sp/>to<sp/>the<sp/>top<sp/>of<sp/>your<sp/>script<sp/>like<sp/>in<sp/>the<sp/>previous<sp/>tutorials.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.Geometry;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Later<sp/>you<sp/>will<sp/>be<sp/>using<sp/>different<sp/>sections<sp/>depending<sp/>on<sp/>whether<sp/>you&apos;re<sp/>generating<sp/>a<sp/>graph<sp/>or<sp/>firing<sp/>a<sp/>ray.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Setup<sp/>for<sp/>Adding<sp/>References<sp/>Through<sp/>The<sp/>Unity<sp/>Inspector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![PlaneReference](walkthroughs/unity/4_mesh_reading/plane_in_scene.PNG)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.6**:<sp/>*Script<sp/>with<sp/>a<sp/>GameObject<sp/>property*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">There<sp/>are<sp/>many<sp/>ways<sp/>to<sp/>reference<sp/>a<sp/>GameObject<sp/>in<sp/>the<sp/>scene<sp/>from<sp/>a<sp/>script,<sp/>but<sp/>for<sp/>this<sp/>example<sp/>we&apos;ll<sp/>be<sp/>setting<sp/>up<sp/>our<sp/>script<sp/>so<sp/>we<sp/>can<sp/>select<sp/>a<sp/>mesh<sp/>in<sp/>the<sp/>scene<sp/>from<sp/>the<sp/>Unity<sp/>Inspector.<sp/>Add<sp/>a<sp/>GameObject<sp/>property<sp/>to<sp/>the<sp/>script<sp/>like<sp/>shown<sp/>on<sp/>line<sp/>7<sp/>of<sp/>figure<sp/>4.6.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal">public<sp/>GameObject<sp/>PlaneInScene;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Later<sp/>we&apos;ll<sp/>use<sp/>the<sp/>Unity<sp/>Inspector<sp/>to<sp/>assign<sp/>the<sp/>plane<sp/>in<sp/>the<sp/>scene<sp/>to<sp/>this<sp/>property.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Getting<sp/>a<sp/>Reference<sp/>to<sp/>the<sp/>Mesh<sp/>Held<sp/>by<sp/>a<sp/>Specific<sp/>GameObject</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Before<sp/>we<sp/>can<sp/>extract<sp/>the<sp/>triangles<sp/>and<sp/>vertices<sp/>from<sp/>one<sp/>an<sp/>instance<sp/>of<sp/>a<sp/>Unity<sp/>Mesh,<sp/>we<sp/>first<sp/>need<sp/>to<sp/>get<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>Mesh<sp/>itself.<sp/>Doing<sp/>this<sp/>requires<sp/>some<sp/>understanding<sp/>of<sp/>Unity<sp/>GameObjects<sp/>and<sp/>their<sp/>components.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Background<sp/>on<sp/>GameObjects<sp/>and<sp/>Components</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![PlaneReference](walkthroughs/unity/4_mesh_reading/plane_inspector.PNG)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.7**:<sp/>*Components<sp/>of<sp/>the<sp/>Plane<sp/>shown<sp/>in<sp/>the<sp/>Unity<sp/>Inspector*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Minimize<sp/>Visual<sp/>Studio<sp/>then<sp/>switch<sp/>back<sp/>to<sp/>Unity<sp/>for<sp/>a<sp/>moment.<sp/>Left<sp/>click<sp/>on<sp/>the<sp/>plane<sp/>we<sp/>created<sp/>previously,<sp/>then<sp/>look<sp/>at<sp/>the<sp/>Inspector<sp/>on<sp/>the<sp/>right<sp/>sidebar.<sp/>It<sp/>should<sp/>look<sp/>similar<sp/>to<sp/>Figure<sp/>4.7.<sp/>Here<sp/>you<sp/>can<sp/>view<sp/>all<sp/>information<sp/>about<sp/>the<sp/>plane,<sp/>such<sp/>as<sp/>its<sp/>position,<sp/>the<sp/>material<sp/>it<sp/>uses,<sp/>which<sp/>mesh<sp/>it&apos;s<sp/>referencing,<sp/>etc.<sp/>You&apos;ll<sp/>notice<sp/>the<sp/>inspector<sp/>is<sp/>split<sp/>into<sp/>several<sp/>sections:<sp/>Transform,<sp/>Meshfilter,<sp/>Mesh<sp/>Collider,<sp/>and<sp/>MeshRenderer.<sp/>Each<sp/>of<sp/>these<sp/>sections<sp/>is<sp/>a<sp/>separate<sp/>**Component**<sp/>and<sp/>the<sp/>object<sp/>we<sp/>see<sp/>in<sp/>the<sp/>scene<sp/>is<sp/>just<sp/>a<sp/>container<sp/>for<sp/>those<sp/>components<sp/>called<sp/>a<sp/>[**GameObject**](https://docs.unity3d.com/Manual/class-GameObject.html).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>stated<sp/>in<sp/>the<sp/>Unity<sp/>Documentation:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>*GameObjects<sp/>are<sp/>the<sp/>fundamental<sp/>objects<sp/>in<sp/>Unity<sp/>that<sp/>represent<sp/>characters,<sp/>props<sp/>and<sp/>scenery.<sp/>They<sp/>do<sp/>not<sp/>accomplish<sp/>much<sp/>in<sp/>themselves,<sp/>but<sp/>they<sp/>act<sp/>as<sp/>containers<sp/>for<sp/>Components,<sp/>which<sp/>implement<sp/>the<sp/>real<sp/>functionality.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">What<sp/>this<sp/>means<sp/>for<sp/>us<sp/>is<sp/>that<sp/>the<sp/>plane<sp/>we<sp/>see<sp/>in<sp/>the<sp/>scene<sp/>is<sp/>not<sp/>a<sp/>Mesh,<sp/>but<sp/>a<sp/>GameObject<sp/>that<sp/>contains<sp/>a<sp/>[MeshFilter](https://docs.unity3d.com/ScriptReference/MeshFilter.html)<sp/>that<sp/>contains<sp/>a<sp/>Mesh.<sp/>You<sp/>can<sp/>think<sp/>of<sp/>it<sp/>like<sp/>GameObject<sp/>&gt;<sp/>Mesh<sp/>Filter<sp/>&gt;<sp/>Mesh.<sp/>To<sp/>obtain<sp/>the<sp/>Mesh<sp/>itself,<sp/>we<sp/>must<sp/>get<sp/>it<sp/>from<sp/>the<sp/>MeshFilter<sp/>component<sp/>of<sp/>the<sp/>Plane<sp/>GameObject.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>In<sp/>Practice</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>game<sp/>object&apos;s<sp/>components<sp/>can<sp/>be<sp/>retrieved<sp/>using<sp/>the<sp/>[GetComponent](https://docs.unity3d.com/ScriptReference/GameObject.GetComponent.html)<sp/>method.<sp/>Go<sp/>back<sp/>to<sp/>the<sp/>Visual<sp/>Studio<sp/>window.<sp/>In<sp/>our<sp/>script<sp/>we<sp/>will<sp/>store<sp/>a<sp/>reference<sp/>to<sp/>the<sp/>plane&apos;s<sp/>mesh<sp/>filter<sp/>in<sp/>a<sp/>variable<sp/>named<sp/>`PlaneFilter`<sp/>at<sp/>the<sp/>beginning<sp/>of<sp/>the<sp/>script&apos;s<sp/>`Start()`<sp/>function<sp/>like<sp/>so:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshFilter<sp/>PlaneFilter<sp/>=<sp/>PlaneInScene.GetComponent&lt;MeshFilter&gt;();</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Then<sp/>we<sp/>can<sp/>access<sp/>the<sp/>actual<sp/>mesh<sp/>carried<sp/>by<sp/>`PlaneFilter`<sp/>by<sp/>calling<sp/>its<sp/>.mesh<sp/>property:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mesh<sp/>PlaneMesh<sp/>=<sp/>PlaneFilter.mesh;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>we<sp/>have<sp/>the<sp/>plane<sp/>as<sp/>a<sp/>mesh<sp/>and<sp/>are<sp/>ready<sp/>to<sp/>get<sp/>the<sp/>required<sp/>info<sp/>from<sp/>it<sp/>for<sp/>HumanFactors.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Getting<sp/>the<sp/>Vertices<sp/>and<sp/>Triangles</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">As<sp/>previously<sp/>stated,<sp/>a<sp/>mesh<sp/>is<sp/>comprised<sp/>of<sp/>an<sp/>index<sp/>and<sp/>vertex<sp/>array.<sp/>To<sp/>use<sp/>this<sp/>mesh<sp/>in<sp/>HumanFactors,<sp/>we<sp/>need<sp/>to<sp/>construct<sp/>a<sp/>MeshInfo<sp/>object<sp/>using<sp/>these<sp/>arrays.<sp/>Fortunately,<sp/>Unity<sp/>provides<sp/>a<sp/>straightforward<sp/>way<sp/>to<sp/>access<sp/>the<sp/>triangle<sp/>indices<sp/>of<sp/>a<sp/>mesh<sp/>in<sp/>a<sp/>format<sp/>that<sp/>we<sp/>can<sp/>use<sp/>for<sp/>HumanFactors,<sp/>but<sp/>unfortunately<sp/>the<sp/>vertices<sp/>only<sp/>come<sp/>in<sp/>an<sp/>array<sp/>of<sp/>Vector3,<sp/>instead<sp/>of<sp/>the<sp/>array<sp/>of<sp/>floats<sp/>that<sp/>we<sp/>need.<sp/>We<sp/>will<sp/>need<sp/>to<sp/>write<sp/>a<sp/>method<sp/>to<sp/>convert<sp/>this<sp/>array<sp/>of<sp/>Vector3<sp/>into<sp/>an<sp/>array<sp/>of<sp/>floats<sp/>before<sp/>we<sp/>can<sp/>use<sp/>it<sp/>in<sp/>HumanFactors.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>simplify<sp/>the<sp/>process<sp/>of<sp/>converting<sp/>the<sp/>vertices<sp/>to<sp/>a<sp/>suitable<sp/>format,<sp/>we<sp/>will<sp/>add<sp/>a<sp/>separate<sp/>method<sp/>called<sp/>*Vector3ArrayToFloatArray*<sp/>that<sp/>will<sp/>transform<sp/>the<sp/>array<sp/>of<sp/>Vector3<sp/>into<sp/>an<sp/>array<sp/>of<sp/>float<sp/>ready<sp/>for<sp/>Human<sp/>Factors.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">On<sp/>line<sp/>9,<sp/>just<sp/>above<sp/>the<sp/>Start()<sp/>function,<sp/>add<sp/>the<sp/>following<sp/>method:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>private<sp/>float[]<sp/>Vector3ArrayToFloatArray(Vector3[]<sp/>vertices)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float[]<sp/>return_array<sp/>=<sp/>new<sp/>float[vertices.Length<sp/>*<sp/>3];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vertices.Length;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>os<sp/>=<sp/>i<sp/>*<sp/>3;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_array[os]<sp/>=<sp/>vertices[i].x;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_array[os<sp/>+<sp/>1]<sp/>=<sp/>vertices[i].y;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_array[os<sp/>+<sp/>2]<sp/>=<sp/>vertices[i].z;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>return_array;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Convert<sp/>Vector3<sp/>Array](walkthroughs/unity/4_mesh_reading/flatten_vertex_array.PNG)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.8**:<sp/>*Location<sp/>for<sp/>Vector3ArrayToFloatArray*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>we<sp/>can<sp/>call<sp/>this<sp/>method<sp/>with<sp/>the<sp/>mesh&apos;s<sp/>vertices<sp/>as<sp/>input<sp/>to<sp/>get<sp/>an<sp/>array<sp/>usable<sp/>with<sp/>HumanFactors.<sp/>Retrieve<sp/>the<sp/>indices<sp/>and<sp/>vertices<sp/>from<sp/>the<sp/>mesh<sp/>by<sp/>calling<sp/>its<sp/>`.triangles`<sp/>and<sp/>`.vertices`<sp/>properties,<sp/>making<sp/>sure<sp/>to<sp/>convert<sp/>the<sp/>array<sp/>of<sp/>vertices<sp/>array<sp/>from<sp/>an<sp/>array<sp/>of<sp/>Vector3<sp/>to<sp/>an<sp/>array<sp/>of<sp/>floats.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>Triangle<sp/>Indexes<sp/>and<sp/>Vertices<sp/>from<sp/>the<sp/>Mesh</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int[]<sp/>plane_indices<sp/>=<sp/>PlaneMesh.triangles;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float[]<sp/>plane_vertices<sp/>=<sp/>Vector3ArrayToFloatArray(PlaneMesh.vertices);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">After<sp/>that,<sp/>the<sp/>process<sp/>of<sp/>constructing<sp/>an<sp/>instance<sp/>of<sp/>MeshInfo<sp/>is<sp/>identical<sp/>to<sp/>the<sp/>previous<sp/>tutorials:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Send<sp/>to<sp/>HumanFactors</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshInfo<sp/>PlaneMeshInfo<sp/>=<sp/>new<sp/>MeshInfo(plane_indices,<sp/>plane_vertices);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Before<sp/>we<sp/>can<sp/>continue<sp/>to<sp/>using<sp/>this<sp/>mesh<sp/>it&apos;s<sp/>important<sp/>to<sp/>cover<sp/>a<sp/>significant<sp/>difference<sp/>between<sp/>this<sp/>mesh<sp/>and<sp/>the<sp/>mesh<sp/>we&apos;ve<sp/>been<sp/>creating<sp/>in<sp/>our<sp/>code.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Transforming<sp/>the<sp/>Mesh<sp/>From<sp/>Y-Up<sp/>to<sp/>Z-Up</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![UnityCoords](walkthroughs/unity/4_mesh_reading/unity_coordinate_system.png)<sp/>![RhinoCoords](walkthroughs/unity/4_mesh_reading/rhino_coordinates.PNG)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.9**:<sp/>*Left:<sp/>Unity&apos;s<sp/>coordinate<sp/>system.<sp/>Right:<sp/>HumanFactors&apos;s<sp/>Coordinate<sp/>system*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>Graph<sp/>Generator<sp/>expects<sp/>geometry<sp/>to<sp/>be<sp/>stored<sp/>as<sp/>if<sp/>the<sp/>Z-Axis<sp/>were<sp/>up<sp/>as<sp/>shown<sp/>in<sp/>the<sp/>picture<sp/>on<sp/>the<sp/>right.<sp/>In<sp/>Unity<sp/>however,<sp/>the<sp/>Y-Axis<sp/>is<sp/>up,<sp/>as<sp/>shown<sp/>in<sp/>the<sp/>left<sp/>picture,<sp/>meaning<sp/>that<sp/>we&apos;ll<sp/>get<sp/>inaccurate<sp/>results<sp/>if<sp/>we<sp/>use<sp/>the<sp/>mesh<sp/>as<sp/>is.<sp/>To<sp/>solve<sp/>this,<sp/>*MeshInfo*<sp/>has<sp/>a<sp/>method<sp/>*RotateMesh*<sp/>that<sp/>allows<sp/>it<sp/>to<sp/>rotate<sp/>itself<sp/>after<sp/><sp/>is<sp/>has<sp/>been<sp/>constructed.<sp/>Another<sp/>class<sp/>in<sp/>the<sp/>Geometry<sp/>namespace<sp/>titled<sp/>*CommonRotations*<sp/>contains<sp/>the<sp/>rotation<sp/>necessary<sp/>to<sp/>perform<sp/>this<sp/>conversion.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Enter<sp/>the<sp/>following<sp/>code<sp/>to<sp/>rotate<sp/>the<sp/>plane<sp/>to<sp/>the<sp/>correct<sp/>orientation:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Rotate<sp/>to<sp/>Z-Up</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlaneMeshInfo.RotateMesh(CommonRotations.Yup_To_Zup);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>that<sp/>the<sp/>plane<sp/>is<sp/>in<sp/>the<sp/>correct<sp/>orientation,<sp/>we<sp/>are<sp/>ready<sp/>to<sp/>move<sp/>on<sp/>to<sp/>verifying<sp/>that<sp/>we<sp/>loaded<sp/>the<sp/>mesh<sp/>successfully.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Choose<sp/>code<sp/>From<sp/>Previous<sp/>Tutorial<sp/>to<sp/>Verify<sp/>Results</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Up<sp/>until<sp/>this<sp/>point,<sp/>your<sp/>code<sp/>should<sp/>match<sp/>the<sp/>code<sp/>below.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal">using<sp/>System.Collections;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>System.Collections.Generic;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>UnityEngine;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.Geometry;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">public<sp/>class<sp/>HFExampleScript<sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>public<sp/>GameObject<sp/>PlaneInScene;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>private<sp/>float[]<sp/>Vector3ArrayToFloatArray(Vector3[]<sp/>vertices)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float[]<sp/>return_array<sp/>=<sp/>new<sp/>float[vertices.Length<sp/>*<sp/>3];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>for<sp/>(int<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>vertices.Length;<sp/>i++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int<sp/>os<sp/>=<sp/>i<sp/>*<sp/>3;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_array[os]<sp/>=<sp/>vertices[i].x;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_array[os<sp/>+<sp/>1]<sp/>=<sp/>vertices[i].y;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return_array[os<sp/>+<sp/>2]<sp/>=<sp/>vertices[i].z;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>return_array;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Start<sp/>is<sp/>called<sp/>before<sp/>the<sp/>first<sp/>frame<sp/>update</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>Start()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshFilter<sp/>PlaneFilter<sp/>=<sp/>PlaneInScene.GetComponent&lt;MeshFilter&gt;();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Mesh<sp/>PlaneMesh<sp/>=<sp/>PlaneFilter.mesh;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>Triangle<sp/>Indexes<sp/>and<sp/>Vertices<sp/>from<sp/>the<sp/>Mesh</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int[]<sp/>plane_indices<sp/>=<sp/>PlaneMesh.triangles;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float[]<sp/>plane_vertices<sp/>=<sp/>Vector3ArrayToFloatArray(PlaneMesh.vertices);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Send<sp/>to<sp/>HumanFactors</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshInfo<sp/>PlaneMeshInfo<sp/>=<sp/>new<sp/>MeshInfo(plane_indices,<sp/>plane_vertices);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//Rotate<sp/>to<sp/>Z-Up</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PlaneMeshInfo.RotateMesh(CommonRotations.Yup_To_Zup);</highlight></codeline>
<codeline></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>is<sp/>called<sp/>once<sp/>per<sp/>frame</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>Update()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Screenshot<sp/>of<sp/>the<sp/>entire<sp/>code<sp/>until<sp/>this<sp/>point](walkthroughs/unity/4_mesh_reading/end_of_getting_mesh.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>see<sp/>if<sp/>we&apos;re<sp/>successfully<sp/>reading<sp/>the<sp/>mesh<sp/>from<sp/>the<sp/>scene,<sp/>*pick<sp/>either<sp/>the<sp/>graph<sp/>generator<sp/>or<sp/>the<sp/>raytracer<sp/>tutorial<sp/>to<sp/>use<sp/>for<sp/>testing*.<sp/><sp/>Substitute<sp/>`PlaneMeshInfo`<sp/>everywhere<sp/>the<sp/>code<sp/>from<sp/>the<sp/>previous<sp/>tutorials<sp/>use<sp/>`Plane`.<sp/>The<sp/>code<sp/>you<sp/>take<sp/>from<sp/>the<sp/>other<sp/>sections<sp/>should<sp/>be<sp/>added<sp/>directly<sp/>after<sp/>the<sp/>line<sp/>containing<sp/>`PlaneMeshInfo.RotateMesh()`.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">The<sp/>lines<sp/>you<sp/>should<sp/>copy<sp/>for<sp/>each<sp/>tutorial<sp/>are:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Graph<sp/>Generator</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>the<sp/>following<sp/>using<sp/>statments:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.RayTracing;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.Geometry;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Copy<sp/>and<sp/>paste<sp/>lines<sp/>Lines<sp/>30<sp/>-<sp/>42<sp/>from<sp/>the<sp/>Graph<sp/>Generator<sp/>tutorial:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>a<sp/>BVH<sp/>for<sp/>the<sp/>RayTracer</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EmbreeBVH<sp/>bvh<sp/>=<sp/>new<sp/>EmbreeBVH(PlaneMeshInfo);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Set<sp/>Options<sp/>for<sp/>the<sp/>Graph<sp/>Generator</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>start_point<sp/>=<sp/>new<sp/>Vector3D(0,<sp/>0,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>spacing<sp/>=<sp/>new<sp/>Vector3D(1,<sp/>1,<sp/>1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>the<sp/>Graph</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Graph<sp/>G<sp/>=<sp/>GraphGenerator.GenerateGraph(bvh,<sp/>start_point,<sp/>spacing);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Get<sp/>a<sp/>list<sp/>of<sp/>nodes<sp/>from<sp/>the<sp/>graph<sp/>and<sp/>print<sp/>them.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NodeList<sp/>nodes<sp/>=<sp/>G.getNodes();</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(nodes);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Ray<sp/>Tracer</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>the<sp/>following<sp/>using<sp/>statments:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.SpatialStructures;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.GraphGenerator;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.RayTracing;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Copy<sp/>and<sp/>paste<sp/>lines<sp/>28<sp/>-<sp/>43<sp/>from<sp/>the<sp/>raytracer<sp/>tutorial:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>a<sp/>BVH<sp/>from<sp/>the<sp/>MeshInfo<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EmbreeBVH<sp/>bvh<sp/>=<sp/>new<sp/>EmbreeBVH(PlaneMeshInfo);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Define<sp/>origin<sp/>and<sp/>direction</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>origin<sp/>=<sp/>new<sp/>Vector3D(1,<sp/>0,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>direction<sp/>=<sp/>new<sp/>Vector3D(0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Cast<sp/>the<sp/>ray,<sp/>store<sp/>the<sp/>hitpoint</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>intersection_point<sp/>=<sp/>EmbreeRaytracer.IntersectForPoint(bvh,<sp/>origin,<sp/>direction);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Print<sp/>the<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>components<sp/>of<sp/>the<sp/>intersection_point</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;(&quot;<sp/>+<sp/>intersection_point.x<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,&quot;<sp/>+<sp/>intersection_point.y<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,&quot;<sp/>+<sp/>intersection_point.z<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;)&quot;)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**Make<sp/>sure<sp/>to<sp/>copy<sp/>over<sp/>any<sp/>other<sp/>using<sp/>declarations<sp/>that<sp/>the<sp/>selected<sp/>tutorial<sp/>uses**,<sp/>since<sp/>those<sp/>are<sp/>required<sp/>for<sp/>it<sp/>to<sp/>function.<sp/>Once<sp/>you&apos;ve<sp/>finished<sp/>this,<sp/>***SAVE***<sp/>your<sp/>script,<sp/>minimize<sp/>Visual<sp/>Studio,<sp/>and<sp/>switch<sp/>to<sp/>the<sp/>Unity<sp/>Editor.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Testing<sp/>the<sp/>Script</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Like<sp/>in<sp/>the<sp/>previous<sp/>tutorials,<sp/>drag<sp/>the<sp/>HFExampleScript<sp/>onto<sp/>the<sp/>Main<sp/>Camera<sp/>object<sp/>in<sp/>the<sp/>scene<sp/>hierarchy<sp/>to<sp/>set<sp/>it<sp/>as<sp/>a<sp/>component.<sp/>In<sp/>the<sp/>previous<sp/>scripts<sp/>we<sp/>were<sp/>ready<sp/>to<sp/>go<sp/>after<sp/>this<sp/>step,<sp/>but<sp/>here<sp/>we<sp/>need<sp/>to<sp/>assign<sp/>the<sp/>Plane<sp/>GameObject<sp/>to<sp/>the<sp/>script<sp/>in<sp/>the<sp/>Unity<sp/>Inspector.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Adding<sp/>References<sp/>to<sp/>Properties<sp/>Through<sp/>the<sp/>Unity<sp/>Inspector</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Unity<sp/>Inspector<sp/>New<sp/>Attribute](walkthroughs/unity/4_mesh_reading/inspect_new_attribute.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.10**:<sp/>*Red<sp/>circle:<sp/>Main<sp/>Camera,<sp/>Highlighted:<sp/>PlaneInScene<sp/>Reference,<sp/>Blue<sp/>Circle:<sp/>Assign<sp/>Reference<sp/>Button*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Click<sp/>on<sp/>the<sp/>Main<sp/>Camera<sp/>in<sp/>the<sp/>left<sp/>under<sp/>the<sp/>scene<sp/>hierarchy.<sp/>Notice<sp/>that<sp/>the<sp/>HF<sp/>Example<sp/>Script<sp/>component<sp/>now<sp/>has<sp/>a<sp/>new<sp/>element<sp/>under<sp/>it<sp/>titled<sp/>*Plane<sp/>In<sp/>Scene*.<sp/>This<sp/>is<sp/>the<sp/>class<sp/>member<sp/>we<sp/>created<sp/>earlier,<sp/>and<sp/>we<sp/>must<sp/>assign<sp/>it<sp/>to<sp/>the<sp/>Plane<sp/>we<sp/>created.<sp/>To<sp/>assign<sp/>the<sp/>plane<sp/>to<sp/>this<sp/>script,<sp/>click<sp/>the<sp/>icon<sp/>to<sp/>the<sp/>right<sp/>of<sp/>*Plane<sp/>In<sp/>Scene*<sp/>(Circled<sp/>in<sp/>blue<sp/>in<sp/>Figure<sp/>4.10).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Gameobject<sp/>Select<sp/>Window](walkthroughs/unity/4_mesh_reading/gameobject_select_window.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.11**:<sp/>*Gameobject<sp/>Select<sp/>Window*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>new<sp/>window<sp/>will<sp/>appear<sp/>asking<sp/>you<sp/>to<sp/>select<sp/>a<sp/>game<sp/>object.<sp/>Double<sp/>click<sp/>on<sp/>Plane,<sp/>highlighted<sp/>in<sp/>Figure<sp/>4.11,<sp/>then<sp/>look<sp/>back<sp/>at<sp/>the<sp/>Unity<sp/>Inspector.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Gameobject<sp/>Select<sp/>Window](walkthroughs/unity/4_mesh_reading/inspect_with_plane.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**4.12**:<sp/>*Inspector<sp/>With<sp/>Plane*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>should<sp/>now<sp/>see<sp/>the<sp/>plane<sp/>in<sp/>the<sp/>Unity<sp/>Inspector<sp/>next<sp/>to<sp/>PlaneInScene,<sp/>like<sp/>in<sp/>Figure<sp/>4.12.<sp/>If<sp/>you<sp/>see<sp/>this,<sp/>then<sp/>you<sp/>have<sp/>successfully<sp/>added<sp/>the<sp/>plane<sp/>to<sp/>the<sp/>script<sp/>as<sp/>a<sp/>reference.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Comparing<sp/>Output</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now,<sp/>enter<sp/>play<sp/>mode<sp/>by<sp/>clicking<sp/>the<sp/>play<sp/>button.<sp/>If<sp/>you<sp/>have<sp/>performed<sp/>the<sp/>above<sp/>steps<sp/>correctly,<sp/>then<sp/>your<sp/>output<sp/>should<sp/>match<sp/>The<sp/>output<sp/>below<sp/>for<sp/>the<sp/>code<sp/>you&apos;ve<sp/>chosen:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">***Graph<sp/>Generator***<sp/><sp/>:</highlight></codeline>
<codeline><highlight class="normal">`[(0.000,0.000,0.000),<sp/>(-1.000,-1.000,0.000),<sp/>(-1.000,0.000,0.000),<sp/>(-1.000,1.000,0.000),<sp/>(0.000,-1.000,0.000),<sp/>.<sp/>.<sp/>.<sp/>(2.000,5.000,0.000),<sp/>(3.000,5.000,0.000),<sp/>(4.000,-5.000,0.000),<sp/>(4.000,5.000,0.000)]`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">***Raytracer***<sp/>:</highlight></codeline>
<codeline><highlight class="normal">`(1,0,0)`</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**NOTE**:<sp/>For<sp/>the<sp/>raytracer<sp/>you<sp/>might<sp/>get<sp/>an<sp/>extremely<sp/>low<sp/>number<sp/>for<sp/>the<sp/>Z<sp/>component<sp/>such<sp/>as<sp/>5.960464E-08<sp/>instead<sp/>of<sp/>0.<sp/>This<sp/>is<sp/>normal,<sp/>since<sp/>none<sp/>of<sp/>the<sp/>plane&apos;s<sp/>vertices<sp/>are<sp/>exactly<sp/>at<sp/>whole<sp/>numbers<sp/>like<sp/>they<sp/>were<sp/>in<sp/>our<sp/>example<sp/>script.<sp/>In<sp/>fact,<sp/>if<sp/>you<sp/>try<sp/>to<sp/>print<sp/>any<sp/>Vector3s<sp/>like<sp/>the<sp/>ones<sp/>returned<sp/>from<sp/>Mesh.vertices,<sp/>they<sp/>will<sp/>round<sp/>their<sp/>components<sp/>before<sp/>displaying<sp/>them.<sp/>The<sp/>nodelist<sp/>returned<sp/>from<sp/>the<sp/>graph<sp/>will<sp/>also<sp/>round<sp/>the<sp/>components<sp/>for<sp/>every<sp/>node<sp/>it<sp/>contains<sp/>when<sp/>converted<sp/>to<sp/>a<sp/>string.<sp/><sp/>Keep<sp/>this<sp/>in<sp/>mind<sp/>when<sp/>reviewing<sp/>results<sp/>in<sp/>the<sp/>future.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>your<sp/>output<sp/>matches<sp/>the<sp/>above<sp/>output<sp/>for<sp/>the<sp/>code<sp/>you&apos;ve<sp/>chosen,<sp/>then<sp/>you<sp/>have<sp/>successfully<sp/>completed<sp/>this<sp/>tutorial.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Conclusion</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Here<sp/>is<sp/>a<sp/>link<sp/>the<sp/>full<sp/>project<sp/>created<sp/>in<sp/>this<sp/>guide:<sp/>[Full<sp/>Project](Tutorial%204%20-%20Reading%20Mesh%20From%20Unity.zip)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">With<sp/>this<sp/>you<sp/>have<sp/>successfully<sp/>read<sp/>geometry<sp/>from<sp/>the<sp/>Unity<sp/>Scene<sp/>and<sp/>passed<sp/>it<sp/>to<sp/>HumanFactors.<sp/>This<sp/>concludes<sp/>the<sp/>tutorial<sp/>series<sp/>for<sp/>this<sp/>point.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>you<sp/>want<sp/>a<sp/>more<sp/>indepth<sp/>look<sp/>at<sp/>using<sp/>the<sp/>Inspector<sp/>to<sp/>assign<sp/>properties<sp/>to<sp/>components,<sp/>see<sp/>the<sp/>[Official<sp/>Unity<sp/>Documentation](https://docs.unity3d.com/Manual/EditingValueProperties.html).</highlight></codeline>
    </programlisting>
    <location file="src/Csharp/docs/markdown/4_reading_mesh_from_unity.md"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="2__raycast__at__plane_8md" kind="file" language="Markdown">
    <compoundname>2_raycast_at_plane.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline></codeline>
<codeline><highlight class="normal">#<sp/>Using<sp/>the<sp/>RayTracer<sp/>{#UsingTheRaytracer}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Previous<sp/>Tutorial:<sp/>[Project<sp/>Setup](@ref<sp/>UnityProjectSetup)</highlight></codeline>
<codeline><highlight class="normal">|</highlight></codeline>
<codeline><highlight class="normal">Next<sp/>Tutorial:<sp/>[Graph<sp/>Generator](@ref<sp/>GeneratingAGraph)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">[TOC]</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Intro</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>that<sp/>we<sp/>know<sp/>the<sp/>HumanFactors<sp/>library<sp/>can<sp/>be<sp/>referenced<sp/>by<sp/>our<sp/>new<sp/>Unity<sp/>Project,<sp/>let&apos;s<sp/>check<sp/>to<sp/>see<sp/>that<sp/>it&apos;s<sp/>working<sp/>by<sp/>writing<sp/>a<sp/>simple<sp/>script<sp/>that<sp/>utilizes<sp/>the<sp/>Raytracer.<sp/>Ray<sp/>intersections<sp/>are<sp/>used<sp/>internally<sp/>by<sp/>many<sp/>of<sp/>the<sp/>analysis<sp/>methods<sp/>in<sp/>HumanFactors,<sp/>and<sp/>can<sp/>be<sp/>an<sp/>extremely<sp/>useful<sp/>tool<sp/>for<sp/>analyzing<sp/>space.<sp/>In<sp/>this<sp/>tutorial<sp/>we<sp/>will<sp/>write<sp/>a<sp/>script<sp/>that<sp/>performs<sp/>the<sp/>following<sp/>when<sp/>playmode<sp/>is<sp/>entered:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>Create<sp/>a<sp/>Plane<sp/>in<sp/>HumanFactors<sp/>from<sp/>vertices<sp/>and<sp/>triangle<sp/>indices.</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>Cast<sp/>a<sp/>ray<sp/>at<sp/>the<sp/>plane.</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>Print<sp/>the<sp/>point<sp/>where<sp/>the<sp/>ray<sp/>intersected<sp/>the<sp/>plane.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>tutorial<sp/>assumes<sp/>that<sp/>you&apos;ve<sp/>completed<sp/>the<sp/>first<sp/>tutorial,<sp/>since<sp/>we<sp/>will<sp/>be<sp/>using<sp/>the<sp/>project<sp/>created<sp/>in<sp/>it<sp/>as<sp/>a<sp/>base,<sp/>and<sp/>building<sp/>upon<sp/>concepts<sp/>first<sp/>established<sp/>there.<sp/>If<sp/>you<sp/>want<sp/>to<sp/>start<sp/>here,<sp/>you<sp/>can<sp/>download<sp/>the<sp/>full<sp/>Unity<sp/>project<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>previous<sp/>tutorial.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now,<sp/>let&apos;s<sp/>begin<sp/>writing<sp/>our<sp/>script.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Writing<sp/>the<sp/>Script</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![HFExampleScriptBlank](walkthroughs/unity/2_raycast_at_plane/blank_new_behaviour_script.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**2.1**:<sp/>*A<sp/>Blank<sp/>MonoBehavior<sp/>Script*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>the<sp/>Visual<sp/>Studio<sp/>window<sp/>we<sp/>opened<sp/>in<sp/>the<sp/>last<sp/>tutorial,<sp/>look<sp/>at<sp/>the<sp/>contents<sp/>of<sp/>HFExampleScript.cs.<sp/>The<sp/>contents<sp/>should<sp/>match<sp/>that<sp/>of<sp/>Figure<sp/>2.1.<sp/>Once<sp/>you&apos;re<sp/>sure<sp/>of<sp/>this,<sp/>it&apos;s<sp/>time<sp/>to<sp/>start<sp/>filling<sp/>it<sp/>in.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**NOTE**:<sp/>Remember,<sp/>if<sp/>you<sp/>ever<sp/>exit<sp/>out<sp/>of<sp/>Visual<sp/>Studio,<sp/>you<sp/>can<sp/>always<sp/>reopen<sp/>it<sp/>by<sp/>double<sp/>clicking<sp/>a<sp/>script<sp/>in<sp/>the<sp/>assets<sp/>window<sp/>of<sp/>the<sp/>unity<sp/>editor.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Using<sp/>Declarations</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Before<sp/>getting<sp/>into<sp/>the<sp/>logic<sp/>of<sp/>the<sp/>script<sp/>itself,<sp/>we<sp/>will<sp/>add<sp/>using<sp/>declarations<sp/>for<sp/>the<sp/>namespaces<sp/>in<sp/>HumanFactors<sp/>that<sp/>we<sp/>plan<sp/>to<sp/>reference.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Add<sp/>the<sp/>following<sp/>lines<sp/>to<sp/>the<sp/>top<sp/>of<sp/>the<sp/>script<sp/>starting<sp/>at<sp/>line<sp/>4.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.RayTracing;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.Geometry;</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![HFExampleScript<sp/>Usings](walkthroughs/unity/2_raycast_at_plane/add_using_delcarations.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**2.2**:<sp/>*The<sp/>Using<sp/>declarations<sp/>required<sp/>for<sp/>this<sp/>script*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Lines,<sp/>1-6<sp/>of<sp/>your<sp/>code<sp/>should<sp/>match<sp/>Figure<sp/>2.2.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**NOTE:**<sp/>While<sp/>editing<sp/>your<sp/>code,<sp/>you<sp/>may<sp/>notice<sp/>the<sp/>colored<sp/>bar<sp/>to<sp/>the<sp/>left<sp/>between<sp/>the<sp/>line<sp/>numbers<sp/>and<sp/>the<sp/>code<sp/>itself.<sp/>This<sp/>bar<sp/>displays<sp/>the<sp/>changes<sp/>you&apos;ve<sp/>made<sp/>to<sp/>the<sp/>current<sp/>document.<sp/>When<sp/>you<sp/>make<sp/>unsaved<sp/>changes,<sp/>the<sp/>bar<sp/>will<sp/>appear<sp/>and<sp/>be<sp/>colored<sp/>yellow,<sp/>then<sp/>once<sp/>you<sp/>save<sp/>it<sp/>will<sp/>turn<sp/>green.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Body<sp/>Of<sp/>Start](walkthroughs/unity/2_raycast_at_plane/body_of_start.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**2.3**:<sp/>*The<sp/>body<sp/>of<sp/>the<sp/>Start<sp/>method<sp/>highlighted*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">With<sp/>using<sp/>declarations<sp/>in<sp/>place,<sp/>we&apos;ll<sp/>be<sp/>writing<sp/>the<sp/>rest<sp/>of<sp/>our<sp/>code<sp/>in<sp/>the<sp/>body<sp/>of<sp/>the<sp/>`Start()`<sp/>method<sp/>beginning<sp/>on<sp/>line<sp/>13<sp/>(highlighted<sp/>in<sp/>yellow<sp/>in<sp/>Figure<sp/>2.3).</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Creating<sp/>a<sp/>Plane</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>we<sp/>will<sp/>create<sp/>a<sp/>plane<sp/>for<sp/>our<sp/>ray<sp/>to<sp/>intersect.<sp/>Every<sp/>mesh<sp/>is,<sp/>at<sp/>minimum,<sp/>comprised<sp/>of<sp/>two<sp/>arrays:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>An<sp/>array<sp/>of<sp/>floats<sp/>containing<sp/>the<sp/>(x,y,z)<sp/>location<sp/>of<sp/>every<sp/>vertex<sp/>in<sp/>the<sp/>mesh.</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>An<sp/>array<sp/>of<sp/>integers<sp/>containing<sp/>the<sp/>indices<sp/>for<sp/>each<sp/>triangle<sp/>or<sp/>&quot;face&quot;<sp/>of<sp/>the<sp/>mesh.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">A<sp/>plane<sp/>is<sp/>comprised<sp/>of<sp/>four<sp/>vertices,<sp/>and<sp/>two<sp/>triangles.<sp/>Here<sp/>are<sp/>the<sp/>vertex<sp/>and<sp/>index<sp/>arrays<sp/>for<sp/>a<sp/>10x10<sp/>plane<sp/>on<sp/>the<sp/>xy<sp/>plane.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>arrays<sp/>for<sp/>the<sp/>plane&apos;s<sp/>vertices<sp/>and<sp/>indices</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float[]<sp/>plane_vertices<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-10f,<sp/>10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-10f,<sp/>-10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10f,<sp/>10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10f,<sp/>-10f,<sp/>0f</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int[]<sp/>plane_indices<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>1,<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>0</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>the<sp/>index<sp/>and<sp/>vertex<sp/>array,<sp/>every<sp/>3<sp/>elements<sp/>represent<sp/>a<sp/>separate<sp/>triangle<sp/>or<sp/>vertex<sp/>respectively.<sp/>So,<sp/>the<sp/>first<sp/>vertex<sp/>is<sp/>at<sp/>location<sp/>(-10,10,0)<sp/>and<sp/>the<sp/>first<sp/>triangle<sp/>is<sp/>comprised<sp/>of<sp/>the<sp/>fourth,<sp/>second,<sp/>and<sp/>first<sp/>vertices.<sp/>For<sp/>more<sp/>information<sp/>on<sp/>what<sp/>both<sp/>arrays<sp/>mean,<sp/>see<sp/>out<sp/>the<sp/>[MeshInfo<sp/>Documentation]().</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**TODO**:<sp/>Replace<sp/>the<sp/>empty<sp/>links<sp/>with<sp/>links<sp/>to<sp/>our<sp/>documentation.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">We<sp/>will<sp/>use<sp/>these<sp/>arrays<sp/>to<sp/>construct<sp/>a<sp/>new<sp/>*MeshInfo*<sp/>object<sp/>in<sp/>HumanFactors.<sp/>Call<sp/>the<sp/>MeshInfo<sp/>constructor<sp/>with<sp/>the<sp/>two<sp/>arrays<sp/>we<sp/>defined<sp/>above<sp/>as<sp/>arguments.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Construct<sp/>a<sp/>meshinfo<sp/>instance<sp/>for<sp/>the<sp/>plane</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshInfo<sp/>Plane<sp/>=<sp/>new<sp/>MeshInfo(plane_indices,<sp/>plane_vertices);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Before<sp/>we<sp/>can<sp/>use<sp/>this<sp/>geometry<sp/>with<sp/>the<sp/>Raytracer,<sp/>we<sp/>must<sp/>first<sp/>generate<sp/>a<sp/>Bounding<sp/>Volume<sp/>Hierarchy,<sp/>or<sp/>BVH<sp/>using<sp/>the<sp/>geometry<sp/>as<sp/>input.<sp/>In<sp/>short,<sp/>a<sp/>BVH<sp/>is<sp/>an<sp/>accelerated<sp/>data<sp/>structure<sp/>that<sp/>drastically<sp/>reduces<sp/>the<sp/>time<sp/>required<sp/>to<sp/>perform<sp/>ray<sp/>intersections.<sp/>You<sp/>can<sp/>read<sp/>more<sp/>about<sp/>the<sp/>BVH<sp/>in<sp/>its<sp/>dedicated<sp/>article<sp/>[Bounding<sp/>Volume<sp/>Hierarchy]().</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>generate<sp/>a<sp/>BVH<sp/>from<sp/>an<sp/>instance<sp/>of<sp/>MeshInfo,<sp/>call<sp/>the<sp/>BVH<sp/>constructor<sp/>with<sp/>the<sp/>MeshInfo<sp/>instance<sp/>as<sp/>an<sp/>argument.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>a<sp/>BVH<sp/>from<sp/>the<sp/>MeshInfo<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EmbreeBVH<sp/>bvh<sp/>=<sp/>new<sp/>EmbreeBVH(Plane);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">At<sp/>this<sp/>point,<sp/>your<sp/>start<sp/>function<sp/>should<sp/>match<sp/>the<sp/>following<sp/>code:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>Start()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>arrays<sp/>for<sp/>the<sp/>plane&apos;s<sp/>vertices<sp/>and<sp/>indices</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float[]<sp/>plane_vertices<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-10f,<sp/>10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-10f,<sp/>-10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10f,<sp/>10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10f,<sp/>-10f,<sp/>0f</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int[]<sp/>plane_indices<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>1,<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>0</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Construct<sp/>a<sp/>meshinfo<sp/>instance<sp/>for<sp/>the<sp/>plane</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshInfo<sp/>Plane<sp/>=<sp/>new<sp/>MeshInfo(plane_indices,<sp/>plane_vertices);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>a<sp/>BVH<sp/>from<sp/>the<sp/>MeshInfo<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EmbreeBVH<sp/>bvh<sp/>=<sp/>new<sp/>EmbreeBVH(Plane);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Image<sp/>in<sp/>Visual<sp/>Studio](walkthroughs/unity/2_raycast_at_plane/creating_a_plane.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">With<sp/>the<sp/>BVH<sp/>created,<sp/>we&apos;re<sp/>ready<sp/>to<sp/>call<sp/>the<sp/>Raytracer<sp/>and<sp/>cast<sp/>a<sp/>ray.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Casting<sp/>a<sp/>Ray</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">We&apos;ll<sp/>put<sp/>the<sp/>origin<sp/>point<sp/>of<sp/>the<sp/>ray<sp/>at<sp/>(1,0,1)<sp/>and<sp/>cast<sp/>it<sp/>in<sp/>the<sp/>direction<sp/>(0,0,-1).<sp/>This<sp/>should<sp/>intersect<sp/>with<sp/>the<sp/>plane<sp/>we<sp/>defined<sp/>earlier<sp/>at<sp/>the<sp/>point<sp/>(1,0,0).<sp/>In<sp/>the<sp/>start<sp/>method,<sp/>just<sp/>below<sp/>the<sp/>line<sp/>we<sp/>create<sp/>the<sp/>BVH,<sp/>define<sp/>an<sp/>origin<sp/>point<sp/>and<sp/>a<sp/>direction<sp/>for<sp/>the<sp/>ray.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Define<sp/>origin<sp/>and<sp/>direction</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>origin<sp/>=<sp/>new<sp/>Vector3D(1,<sp/>0,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>direction<sp/>=<sp/>new<sp/>Vector3D(0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Depending<sp/>on<sp/>which<sp/>function<sp/>you<sp/>call,<sp/>the<sp/>EmbreeRaytracer<sp/>can<sp/>return<sp/>3<sp/>different<sp/>types<sp/>of<sp/>information:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">1.<sp/>The<sp/>coordinates<sp/>where<sp/>a<sp/>ray<sp/>intersected<sp/>the<sp/>mesh.</highlight></codeline>
<codeline><highlight class="normal">2.<sp/>The<sp/>distance<sp/>from<sp/>the<sp/>ray&apos;s<sp/>origin<sp/>to<sp/>the<sp/>point<sp/>where<sp/>it<sp/>intersected<sp/>the<sp/>mesh</highlight></codeline>
<codeline><highlight class="normal">3.<sp/>A<sp/>boolean<sp/>true/false<sp/>for<sp/>whether<sp/>the<sp/>ray<sp/>intersected<sp/>the<sp/>mesh<sp/>at<sp/>any<sp/>point.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">For<sp/>this<sp/>guide<sp/>we<sp/>will<sp/>use<sp/>[IntersectForPoint]()<sp/>to<sp/>get<sp/>the<sp/>point<sp/>where<sp/>the<sp/>ray<sp/>intersects<sp/>the<sp/>mesh.<sp/>Starting<sp/>on<sp/>line<sp/>35<sp/>call<sp/>the<sp/>EmbreeRayTracer&apos;s<sp/>**IntersectForPoint**<sp/>function<sp/>with<sp/>the<sp/>bvh,<sp/>origin<sp/>and<sp/>direction<sp/>as<sp/>arguments.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Cast<sp/>the<sp/>ray,<sp/>store<sp/>the<sp/>hitpoint.</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>intersection_point<sp/>=<sp/>EmbreeRaytracer.IntersectForPoint(bvh,<sp/>origin,<sp/>direction);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Finally,<sp/>log<sp/>the<sp/>point<sp/>of<sp/>intersection<sp/>to<sp/>Unity&apos;s<sp/>console<sp/>using<sp/>`Debug.Log()`<sp/>so<sp/>we<sp/>can<sp/>view<sp/>the<sp/>results.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Print<sp/>the<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>components<sp/>of<sp/>the<sp/>intersection<sp/>point</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;(&quot;<sp/>+<sp/>intersection_point.x<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,&quot;<sp/>+<sp/>intersection_point.y<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,&quot;<sp/>+<sp/>intersection_point.z<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;)&quot;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Here&apos;s<sp/>all<sp/>of<sp/>that<sp/>together:</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Define<sp/>origin<sp/>and<sp/>direction</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>origin<sp/>=<sp/>new<sp/>Vector3D(1,<sp/>0,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>direction<sp/>=<sp/>new<sp/>Vector3D(0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Cast<sp/>the<sp/>ray,<sp/>store<sp/>the<sp/>hitpoint</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>intersection_point<sp/>=<sp/>EmbreeRaytracer.IntersectForPoint(bvh,<sp/>origin,<sp/>direction);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Print<sp/>the<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>components<sp/>of<sp/>the<sp/>intersection_point</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;(&quot;<sp/>+<sp/>intersection_point.x<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,&quot;<sp/>+<sp/>intersection_point.y<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,&quot;<sp/>+<sp/>intersection_point.z<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;)&quot;);</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Image<sp/>of<sp/>our<sp/>Start()<sp/>function<sp/>up<sp/>until<sp/>this<sp/>point](walkthroughs/unity/2_raycast_at_plane/casting_a_ray.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Wrapping<sp/>Up</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Here<sp/>is<sp/>the<sp/>final<sp/>script<sp/>we&apos;ve<sp/>been<sp/>building<sp/>in<sp/>this<sp/>tutorial.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```{.cs}</highlight></codeline>
<codeline><highlight class="normal">using<sp/>System.Collections;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>System.Collections.Generic;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>UnityEngine;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.RayTracing;</highlight></codeline>
<codeline><highlight class="normal">using<sp/>HumanFactors.Geometry;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">public<sp/>class<sp/>HFExampleScript<sp/>:<sp/>MonoBehaviour</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Start<sp/>is<sp/>called<sp/>before<sp/>the<sp/>first<sp/>frame<sp/>update</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>Start()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Create<sp/>arrays<sp/>for<sp/>the<sp/>plane&apos;s<sp/>vertices<sp/>and<sp/>indices</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>float[]<sp/>plane_vertices<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-10f,<sp/>10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-10f,<sp/>-10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10f,<sp/>10f,<sp/>0f,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>10f,<sp/>-10f,<sp/>0f</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int[]<sp/>plane_indices<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3,<sp/>1,<sp/>0,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2,<sp/>3,<sp/>0</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Construct<sp/>a<sp/>meshinfo<sp/>instance<sp/>for<sp/>the<sp/>plane</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshInfo<sp/>Plane<sp/>=<sp/>new<sp/>MeshInfo(plane_indices,<sp/>plane_vertices);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Generate<sp/>a<sp/>BVH<sp/>from<sp/>the<sp/>MeshInfo<sp/>instance</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EmbreeBVH<sp/>bvh<sp/>=<sp/>new<sp/>EmbreeBVH(Plane);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Define<sp/>origin<sp/>and<sp/>direction</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>origin<sp/>=<sp/>new<sp/>Vector3D(1,<sp/>0,<sp/>1);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>direction<sp/>=<sp/>new<sp/>Vector3D(0,<sp/>0,<sp/>-1);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Cast<sp/>the<sp/>ray,<sp/>store<sp/>the<sp/>hitpoint</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>intersection_point<sp/>=<sp/>EmbreeRaytracer.IntersectForPoint(bvh,<sp/>origin,<sp/>direction);</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>//<sp/>Print<sp/>the<sp/>x,<sp/>y,<sp/>and<sp/>z<sp/>components<sp/>of<sp/>the<sp/>intersection_point</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.Log(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;(&quot;<sp/>+<sp/>intersection_point.x<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,&quot;<sp/>+<sp/>intersection_point.y<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;,&quot;<sp/>+<sp/>intersection_point.z<sp/>+</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&quot;)&quot;);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>//<sp/>Update<sp/>is<sp/>called<sp/>once<sp/>per<sp/>frame</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>void<sp/>Update()</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Once<sp/>you&apos;ve<sp/>verified<sp/>your<sp/>code<sp/>matches,<sp/>***make<sp/>sure<sp/>to<sp/>save<sp/>the<sp/>script<sp/><sp/>by<sp/>clicking<sp/>File<sp/>then<sp/>Save<sp/>in<sp/>the<sp/>top<sp/>menu<sp/>or<sp/>pressing<sp/>Ctrl<sp/>+<sp/>S<sp/>on<sp/>your<sp/>keyboard.***<sp/>Unity<sp/>will<sp/>NOT<sp/>be<sp/>able<sp/>to<sp/>use<sp/>the<sp/>script<sp/>unless<sp/>you<sp/>save<sp/>it.<sp/>If<sp/>you&apos;re<sp/>unsure,<sp/>the<sp/>bar<sp/>on<sp/>the<sp/>left-hand<sp/>side<sp/>between<sp/>your<sp/>code<sp/>and<sp/>the<sp/>line<sp/>numbers<sp/>should<sp/>be<sp/>solid<sp/>green,<sp/>and<sp/>the<sp/>title<sp/>of<sp/>your<sp/>assembly<sp/>should<sp/>not<sp/>have<sp/>an<sp/>asterisk<sp/>next<sp/>to<sp/>it.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Add<sp/>Using<sp/>HumanFactors](walkthroughs/unity/2_raycast_at_plane/saved_vs_unsaved.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Testing</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>that<sp/>we<sp/>have<sp/>a<sp/>usable<sp/>script,<sp/>we<sp/>need<sp/>to<sp/>attach<sp/>it<sp/>to<sp/>some<sp/>game<sp/>object<sp/>in<sp/>order<sp/>to<sp/>run<sp/>it.<sp/>Let&apos;s<sp/>minimize<sp/>the<sp/>Visual<sp/>Studio<sp/>window<sp/>and<sp/>go<sp/>back<sp/>to<sp/>the<sp/>Unity<sp/>Editor.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Adding<sp/>the<sp/>script<sp/>to<sp/>the<sp/>camera</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Drag<sp/>HFExampleScript.cs<sp/>Into<sp/>Camera](walkthroughs/unity/2_raycast_at_plane/drag_into_camera.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**2.4**<sp/>*Adding<sp/>HFExampleScript<sp/>to<sp/>the<sp/>camera<sp/>as<sp/>a<sp/>component*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>the<sp/>Unity<sp/>window<sp/>drag<sp/>*HFExampleScript.cs*<sp/>to<sp/>*Main<sp/>Camera*<sp/>in<sp/>the<sp/>scene<sp/>hierarchy<sp/>like<sp/>shown<sp/>in<sp/>Figure<sp/>2.4.<sp/>After<sp/>doing<sp/>this,<sp/>it<sp/>may<sp/>appear<sp/>as<sp/>if<sp/>nothing<sp/>happened,<sp/>but<sp/>by<sp/>dragging<sp/>HFExampleScript<sp/>over<sp/>the<sp/>camera<sp/>you&apos;ve<sp/>added<sp/>HFExampleScript<sp/>to<sp/>the<sp/>camera<sp/>as<sp/>a<sp/>component.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Look<sp/>At<sp/>Camera<sp/>In<sp/>Sidebar](walkthroughs/unity/2_raycast_at_plane/camera_in_sidebar.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**2.5**<sp/>*Viewing<sp/>the<sp/>components<sp/>of<sp/>the<sp/>Main<sp/>Camera*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">You<sp/>can<sp/>verify<sp/>that<sp/>the<sp/>script<sp/>has<sp/>been<sp/>added<sp/>to<sp/>the<sp/>camera<sp/>by<sp/>left<sp/>clicking<sp/>the<sp/>camera<sp/>in<sp/>the<sp/>scene<sp/>hierarchy<sp/>and<sp/>looking<sp/>at<sp/>its<sp/>components<sp/>in<sp/>the<sp/>Inspector<sp/>on<sp/>the<sp/>right<sp/>sidebar.<sp/>At<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>Inspector<sp/>you<sp/>should<sp/>see<sp/>a<sp/>header<sp/>for<sp/>HF<sp/>Example<sp/>Script<sp/>like<sp/>the<sp/>one<sp/>highlighted<sp/>in<sp/>Figure<sp/>2.5.<sp/>Once<sp/>you&apos;ve<sp/>made<sp/>sure<sp/>it<sp/>exists,<sp/>you<sp/>can<sp/>click<sp/>on<sp/>an<sp/>empty<sp/>space<sp/>in<sp/>the<sp/>scene<sp/>view<sp/>to<sp/>deselect<sp/>the<sp/>camera.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**NOTE**:<sp/>If<sp/>you<sp/>don&apos;t<sp/>see<sp/>the<sp/>inspector<sp/>in<sp/>the<sp/>right<sp/>sidebar,<sp/>you<sp/>can<sp/>enable<sp/>it<sp/>by<sp/>selecting<sp/>Window<sp/>&gt;<sp/>General<sp/>&gt;<sp/>Inspector<sp/>from<sp/>the<sp/>top<sp/>menubar.<sp/>![Re-Open<sp/>Inspector](walkthroughs/unity/2_raycast_at_plane/re_open_inspector.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**NOTE**:<sp/>If<sp/>you<sp/>notice<sp/>multiple<sp/>copies<sp/>of<sp/>the<sp/>script<sp/>in<sp/>the<sp/>Inspector,<sp/>you<sp/>can<sp/>remove<sp/>duplicates<sp/>by<sp/>left<sp/>clicking<sp/>on<sp/>the<sp/>rightmost<sp/>side<sp/>of<sp/>header<sp/>for<sp/>the<sp/>duplicate<sp/>components&apos;<sp/>headers,<sp/>then<sp/>clicking<sp/>*Remove<sp/>Component*.</highlight></codeline>
<codeline><highlight class="normal">&gt;![Remove<sp/>Extra<sp/>Component](walkthroughs/unity/2_raycast_at_plane/remove_extra_component.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Executing<sp/>the<sp/>Script</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Now<sp/>that<sp/>we&apos;ve<sp/>set<sp/>*HFExampleScript*<sp/>as<sp/>a<sp/>component<sp/>of<sp/>the<sp/>*Main<sp/>Camera*,<sp/>its<sp/>`Start()`<sp/>function<sp/>containing<sp/>our<sp/>code<sp/>will<sp/>run<sp/>when<sp/>the<sp/>editor<sp/>enters<sp/>play<sp/>mode.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Look<sp/>At<sp/>Camera<sp/>In<sp/>Sidebar](walkthroughs/unity/2_raycast_at_plane/play_mode_button.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**2.6**<sp/>*Circled<sp/>play<sp/>button<sp/>in<sp/>editor<sp/>window*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">To<sp/>enter<sp/>playmode,<sp/>press<sp/>the<sp/>play<sp/>button<sp/>located<sp/>at<sp/>the<sp/>top<sp/>center<sp/>of<sp/>your<sp/>screen,<sp/>circled<sp/>in<sp/>red<sp/>in<sp/>Figure<sp/>2.6.<sp/>Once<sp/>clicked,<sp/>you<sp/>will<sp/>enter<sp/>play<sp/>mode,<sp/>indicated<sp/>by<sp/><sp/>the<sp/>play<sp/>button<sp/>turning<sp/>blue.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**NOTE:**<sp/>If<sp/>when<sp/>entering<sp/>play<sp/>mode,<sp/>the<sp/>game<sp/>window<sp/>becomes<sp/>full<sp/>screen<sp/>like<sp/>below,<sp/>that<sp/>means<sp/>you<sp/>have<sp/>the<sp/>*Maximize<sp/>On<sp/>Play*<sp/>option<sp/>enabled.<sp/>You<sp/>can<sp/>disable<sp/>it<sp/>by<sp/>pressing<sp/>the<sp/><sp/>*Maximize<sp/>On<sp/>Play*<sp/>button<sp/>circled<sp/>in<sp/>red<sp/>below.<sp/>For<sp/>this<sp/>tutorial<sp/>series,<sp/>we<sp/>will<sp/>leave<sp/>this<sp/>option<sp/>off<sp/>since<sp/>it<sp/>hides<sp/>the<sp/>console.</highlight></codeline>
<codeline><highlight class="normal">&gt;![Circled<sp/>Maximize<sp/>On<sp/>Play<sp/>Button](walkthroughs/unity/2_raycast_at_plane/playmode_maximize_on_play.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Add<sp/>Using<sp/>HumanFactors](walkthroughs/unity/2_raycast_at_plane/console_show_meshinfo.png)<sp/></highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**2.7A**<sp/>*Intersection<sp/>Results<sp/>in<sp/>play<sp/>mode.*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">![Console<sp/>Output](walkthroughs/unity/2_raycast_at_plane/ExpectedOutput.png)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">*Figure*<sp/>**2.7B**<sp/>*Results<sp/>from<sp/>2.7A<sp/>magnified*</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>everything<sp/>went<sp/>right,<sp/>after<sp/>entering<sp/>play<sp/>mode<sp/>the<sp/>console<sp/>located<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>your<sp/>editor&apos;s<sp/>window<sp/>should<sp/>show<sp/>`(1,0,0)`,<sp/>which<sp/>is<sp/>the<sp/>exact<sp/>point<sp/>where<sp/>the<sp/>ray<sp/>intersected<sp/>the<sp/>plane.<sp/>Figure<sp/>2.7B<sp/>is<sp/>a<sp/>magnified<sp/>version<sp/>of<sp/>the<sp/>console&apos;s<sp/>output<sp/>enclosed<sp/>by<sp/>the<sp/>red<sp/>box<sp/>shown<sp/>in<sp/>2.7A.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">&gt;<sp/>**NOTE**:<sp/>If<sp/>you<sp/>see<sp/>no<sp/>output<sp/>at<sp/>all,<sp/>that<sp/>means<sp/>your<sp/>version<sp/>of<sp/>Unity<sp/>has<sp/>log<sp/>messages<sp/>disabled.<sp/>To<sp/>enable<sp/>log<sp/>messages<sp/>click<sp/>on<sp/>the<sp/>Console<sp/>tab<sp/>just<sp/>above<sp/>the<sp/>assets<sp/>window<sp/>to<sp/>open<sp/>the<sp/>console.</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>![Change<sp/>To<sp/>Console](walkthroughs/unity/2_raycast_at_plane/click_console_tab.png)</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>After<sp/>this,<sp/>you<sp/>should<sp/>notice<sp/>the<sp/>three<sp/>buttons<sp/>in<sp/>the<sp/>top<sp/>right<sp/>of<sp/>the<sp/>console<sp/>window.<sp/>The<sp/>Left<sp/>most<sp/>button<sp/>with<sp/>an<sp/>exclamation<sp/>point<sp/>in<sp/>a<sp/>speech<sp/>bubble<sp/>should<sp/>be<sp/>greyed<sp/>out.<sp/>Click<sp/>on<sp/>this<sp/>button<sp/>to<sp/>enable<sp/>log<sp/>messages.</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>![Enable<sp/>Log<sp/>Messages](walkthroughs/unity/2_raycast_at_plane/click_to_enable_log_messages.png)</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>You<sp/>will<sp/>see<sp/>your<sp/>output<sp/>in<sp/>the<sp/>space<sp/>where<sp/>the<sp/>assets<sp/>tab<sp/>occupied,<sp/>instead<sp/>of<sp/>the<sp/>bottom<sp/>bar.<sp/>You<sp/>can<sp/>switch<sp/>back<sp/>to<sp/>the<sp/>assets<sp/>window<sp/>by<sp/>clicking<sp/>the<sp/>project<sp/>tab<sp/>to<sp/>the<sp/>left<sp/>of<sp/>the<sp/>console<sp/>tab.</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>![Back<sp/>to<sp/>Assets](walkthroughs/unity/2_raycast_at_plane/enabled_log_messages.png)</highlight></codeline>
<codeline><highlight class="normal">&gt;<sp/>Future<sp/>calls<sp/>to<sp/>`Debug.Log()`<sp/>will<sp/>appear<sp/>at<sp/>the<sp/>bottom<sp/>of<sp/>the<sp/>screen<sp/>like<sp/>shown<sp/>in<sp/>Figure<sp/>2.4.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">If<sp/>your<sp/>console&apos;s<sp/>output<sp/>matches,<sp/>then<sp/>you&apos;ve<sp/>successfully<sp/>completed<sp/>this<sp/>tutorial.<sp/>You<sp/>can<sp/>press<sp/>the<sp/>play<sp/>button<sp/>again<sp/>to<sp/>exit<sp/>playmode.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>Conclusion</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">Full<sp/>project<sp/>Link:<sp/>[Tutorial<sp/>2:<sp/>Casting<sp/>a<sp/>Ray<sp/>at<sp/>A<sp/>Plane](Tutorial%202%20-%20Unity%20Project.zip)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">In<sp/>this<sp/>tutorial<sp/>we&apos;ve<sp/>successfully<sp/>created<sp/>a<sp/>plane<sp/>from<sp/>an<sp/>array<sp/>of<sp/>vertices<sp/>and<sp/>triangle<sp/>indexes,<sp/>then<sp/>casted<sp/>a<sp/>ray<sp/>at<sp/>it,<sp/>then<sp/>found<sp/>the<sp/>point<sp/>where<sp/>the<sp/>ray<sp/>and<sp/>the<sp/>plane<sp/>intersected.<sp/>Through<sp/>this<sp/>we&apos;ve<sp/>gained<sp/>some<sp/>experience<sp/>using<sp/>Visual<sp/>Studio<sp/>with<sp/>Unity<sp/>and<sp/>became<sp/>more<sp/>familiar<sp/>with<sp/>the<sp/>Editor&apos;s<sp/>UI.<sp/>In<sp/>the<sp/>next<sp/>tutorial<sp/>we<sp/>will<sp/>build<sp/>upon<sp/>this<sp/>experience<sp/>to<sp/>cover<sp/>a<sp/>core<sp/>part<sp/>of<sp/>the<sp/>HumanFactors<sp/>Library:<sp/>The<sp/>[Graph<sp/>Generator](@ref<sp/>GeneratingAGraph).</highlight></codeline>
    </programlisting>
    <location file="src/Csharp/docs/markdown/2_raycast_at_plane.md"/>
  </compounddef>
</doxygen>

<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="class_human_factors_1_1_view_analysis_1_1_view_analysis" kind="class" language="C#" prot="public">
    <compoundname>HumanFactors::ViewAnalysis::ViewAnalysis</compoundname>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="class_human_factors_1_1_view_analysis_1_1_view_analysis_1a1cdb30c740e2efd5a1a01ef633c734ac" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_human_factors_1_1_native_utils_1_1_common_native_arrays_1_1_managed_float_array" kindref="compound">ManagedFloatArray</ref></type>
        <definition>static ManagedFloatArray HumanFactors.ViewAnalysis.ViewAnalysis.ViewAnalysisAggregate</definition>
        <argsstring>(EmbreeBVH bvh, IEnumerable&lt; Vector3D &gt; nodes, int ray_count, float upward_fov=50.0f, float downward_fov=70.0f, float height=1.7f, ViewAggregateType type=ViewAggregateType.AVERAGE)</argsstring>
        <name>ViewAnalysisAggregate</name>
        <param>
          <type><ref refid="class_human_factors_1_1_ray_tracing_1_1_embree_b_v_h" kindref="compound">EmbreeBVH</ref></type>
          <declname>bvh</declname>
        </param>
        <param>
          <type>IEnumerable&lt; <ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref> &gt;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ray_count</declname>
        </param>
        <param>
          <type>float</type>
          <declname>upward_fov</declname>
          <defval>50.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>downward_fov</declname>
          <defval>70.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
          <defval>1.7f</defval>
        </param>
        <param>
          <type><ref refid="namespace_human_factors_1_1_view_analysis_1ae24b8f5d9783a270e51183ff2eca765c" kindref="member">ViewAggregateType</ref></type>
          <declname>type</declname>
          <defval><ref refid="namespace_human_factors_1_1_view_analysis_1ae24b8f5d9783a270e51183ff2eca765ca16de38737a9f8366e9b2042b4e9b6290" kindref="member">ViewAggregateType.AVERAGE</ref></defval>
        </param>
        <briefdescription>
<para>Conduct view analysis and aggregate the results for each node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bvh</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="namespace_human_factors_1_1_geometry" kindref="compound">Geometry</ref> to intersect with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>Observer locations to perform view analysis from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ray_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rays to fire. Higher values provide more accurate analysis, but increase the runtime of this function </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upward_fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum angle in degrees above the viewer&apos;s eye level that is considered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>downward_fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum angle in degrees below the viewer&apos;s eye level that is considered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the observer. Nodes are offset this distance from the ground before the analysis is performed. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>How the distances for all hits should be aggregated. See <ref refid="namespace_human_factors_1_1_view_analysis_1ae24b8f5d9783a270e51183ff2eca765c" kindref="member">ViewAggregateType</ref> for a list of all aggregation methods.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An ordered array of floats corresponding to the aggregated score for each node in nodes.</para>
</simplesect>
The rays for each node will be casted in parallel using all available cores on the host&apos;s machine.</para>
<para><simplesect kind="remark"><para>This function is much lighter in memory than <ref refid="class_human_factors_1_1_view_analysis_1_1_view_analysis_1aec86f6a5bbc392de04357465994bab39" kindref="member">ViewAnalysisStandard</ref> since all operations are done in place on single floats. Use this as a faster alternative if the scores of nodes are all that&apos;s needed.</para>
</simplesect>
<simplesect kind="par"><title>Examples</title><para></para>
</simplesect>
<programlisting filename="viewanalysis\test_viewanalysis.cs"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>plane<sp/>.obj<sp/>from<sp/>example<sp/>models,<sp/>and<sp/>rotate<sp/>it<sp/>from<sp/>y-up<sp/>to<sp/>z-up</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mesh_path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ExampleModels/plane.obj&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshInfo<sp/>OBJ<sp/>=<sp/>OBJLoader.LoadOBJ(mesh_path,<sp/>CommonRotations.Zup_To_Yup);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>BVH<sp/>from<sp/>the<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EmbreeBVH<sp/>bvh<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EmbreeBVH(OBJ);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>Point<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3D(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D[]<sp/>nodes<sp/>=<sp/>{<sp/>Point<sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rays<sp/>=<sp/>1000;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting><programlisting filename="viewanalysis\test_viewanalysis.cs"><codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>nodes<sp/>to<sp/>evaluate</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D[]<sp/>nodes<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3D(0,0,1),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3D(0,0,2),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3D(0,0,3)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>maximum<sp/>number<sp/>of<sp/>rays,<sp/>then<sp/>conduct<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rays<sp/>=<sp/>1000;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ManagedFloatArray<sp/>results<sp/>=<sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_view_analysis" kindref="compound">ViewAnalysis</ref>.<ref refid="class_human_factors_1_1_view_analysis_1_1_view_analysis" kindref="compound">ViewAnalysis</ref>.<ref refid="class_human_factors_1_1_view_analysis_1_1_view_analysis_1a1cdb30c740e2efd5a1a01ef633c734ac" kindref="member">ViewAnalysisAggregate</ref>(</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bvh,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num_rays,</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type:<ref refid="namespace_human_factors_1_1_view_analysis_1ae24b8f5d9783a270e51183ff2eca765c" kindref="member">ViewAggregateType</ref>.COUNT</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>results.<sp/>The<sp/>number<sp/>of<sp/>rays<sp/>should<sp/>get<sp/>lower<sp/>with<sp/>each<sp/>element,<sp/>since<sp/>each<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>is<sp/>further<sp/>away<sp/>from<sp/>the<sp/>plane<sp/>than<sp/>the<sp/>last</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(results);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting><computeroutput>[480, 451, 428]</computeroutput> </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/viewanalysis/src/ViewAnalysis.cs" line="83" column="41"/>
      </memberdef>
      <memberdef kind="function" id="class_human_factors_1_1_view_analysis_1_1_view_analysis_1aec86f6a5bbc392de04357465994bab39" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_human_factors_1_1_view_analysis_1_1_result_array" kindref="compound">ResultArray</ref></type>
        <definition>static ResultArray HumanFactors.ViewAnalysis.ViewAnalysis.ViewAnalysisStandard</definition>
        <argsstring>(EmbreeBVH bvh, IEnumerable&lt; Vector3D &gt; nodes, int ray_count, float upward_fov=50.0f, float downward_fov=70.0f, float height=1.7f)</argsstring>
        <name>ViewAnalysisStandard</name>
        <param>
          <type><ref refid="class_human_factors_1_1_ray_tracing_1_1_embree_b_v_h" kindref="compound">EmbreeBVH</ref></type>
          <declname>bvh</declname>
        </param>
        <param>
          <type>IEnumerable&lt; <ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref> &gt;</type>
          <declname>nodes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ray_count</declname>
        </param>
        <param>
          <type>float</type>
          <declname>upward_fov</declname>
          <defval>50.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>downward_fov</declname>
          <defval>70.0f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>height</declname>
          <defval>1.7f</defval>
        </param>
        <briefdescription>
<para>Conduct View Analysis and access the results of every ray casted for every node. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>bvh</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="namespace_human_factors_1_1_geometry" kindref="compound">Geometry</ref> to intersect with. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodes</parametername>
</parameternamelist>
<parameterdescription>
<para>Observer locations to perform view analysis from. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ray_count</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of rays to fire.Higher values provide more accurate analysis, but increase the runtime and memory consumption of this function. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upward_fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum angle in degrees above the viewer&apos;s eye level that is considered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>downward_fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum angle in degrees below the viewer&apos;s eye level that is considered. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>height</parametername>
</parameternamelist>
<parameterdescription>
<para>Height of the observer. Nodes are offset this distance from the ground before the analysis is performed.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A <computeroutput>nodes.Count()</computeroutput> by <computeroutput>num_rays</computeroutput> 2 dimensional array of results for each node and each ray casted. For example, every ray for node one is located at row 1, and the results for every ray casted from node 2 are located at row 2.</para>
</simplesect>
The rays for each node will be casted in parallel using all available cores on the host&apos;s machine.</para>
<para><simplesect kind="warning"><para>The number of rays casted may not exactly match ray_count depending on the provided field of view restrictions.</para>
</simplesect>
<simplesect kind="note"><para>The hitpoints for each ray in the returned array can be determined using the directions <ref refid="class_human_factors_1_1_view_analysis_1_1_view_analysis_1abc1d51bdf752a4fa36af012e90cc8acb" kindref="member">SphericallyDistributeRays()</ref> with the same fov and ray_count parameters. Failures to intersect geometry will return -1.</para>
</simplesect>
<simplesect kind="par"><title>Example</title><para><programlisting filename="viewanalysis\test_viewanalysis.cs"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>plane<sp/>.obj<sp/>from<sp/>example<sp/>models,<sp/>and<sp/>rotate<sp/>it<sp/>from<sp/>y-up<sp/>to<sp/>z-up</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>mesh_path<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;ExampleModels/plane.obj&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>MeshInfo<sp/>OBJ<sp/>=<sp/>OBJLoader.LoadOBJ(mesh_path,<sp/>CommonRotations.Zup_To_Yup);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>BVH<sp/>from<sp/>the<sp/>plane</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>EmbreeBVH<sp/>bvh<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>EmbreeBVH(OBJ);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D<sp/>Point<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3D(0,<sp/>0,<sp/>0);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D[]<sp/>nodes<sp/>=<sp/>{<sp/>Point<sp/>};</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rays<sp/>=<sp/>1000;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting><programlisting filename="viewanalysis\test_viewanalysis.cs"><codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Define<sp/>the<sp/>nodes<sp/>to<sp/>evaluate</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Vector3D[]<sp/>nodes<sp/>=<sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3D(0,0,1),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3D(1,1,1),</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/>Vector3D(0,0,3)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Set<sp/>maximum<sp/>number<sp/>of<sp/>rays,<sp/>then<sp/>conduct<sp/>analysis</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_rays<sp/>=<sp/>10;</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Conduct<sp/>view<sp/>analysis<sp/>and<sp/>get<sp/>all<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>results<sp/>=<sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_view_analysis" kindref="compound">ViewAnalysis</ref>.<ref refid="class_human_factors_1_1_view_analysis_1_1_view_analysis" kindref="compound">ViewAnalysis</ref>.<ref refid="class_human_factors_1_1_view_analysis_1_1_view_analysis_1aec86f6a5bbc392de04357465994bab39" kindref="member">ViewAnalysisStandard</ref>(bvh,<sp/>nodes,<sp/>num_rays);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>every<sp/>node<sp/>and<sp/>print<sp/>the<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>node_index<sp/>=<sp/>0;<sp/>node_index<sp/>&lt;<sp/>nodes.Length;<sp/>node_index++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>node<sp/>=<sp/>nodes[node_index];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>print<sp/>=<sp/>node.ToString()<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;:<sp/>(&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ray_index<sp/>=<sp/>0;<sp/>ray_index<sp/>&lt;<sp/>num_rays;<sp/>ray_index++)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>result<sp/>for<sp/>the<sp/>current<sp/>node<sp/>at<sp/>the<sp/>current<sp/>ray</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>result<sp/>=<sp/>results[node_index][ray_index];</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>+=<sp/>result.ToString();</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Add<sp/>a<sp/>comma<sp/>if<sp/>it<sp/>isn&apos;t<sp/>the<sp/>last<sp/>element</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(ray_index<sp/>!=<sp/>num_rays<sp/>-<sp/>1)</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;,<sp/>&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>print<sp/>+=<sp/></highlight><highlight class="stringliteral">&quot;)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>the<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(print);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting> <programlisting><codeline><highlight class="normal">(0,<sp/>0,<sp/>1):<sp/>([-1,<sp/>-1],<sp/>[5.292,<sp/>0],<sp/>[-1,<sp/>-1],<sp/>[-1,<sp/>-1],<sp/>[3.098,<sp/>0],<sp/>[5.407,<sp/>0],<sp/>[13.07,<sp/>0],<sp/>[-1,<sp/>-1],<sp/>[3.529,<sp/>0],<sp/>[-1,<sp/>-1])</highlight></codeline>
<codeline><highlight class="normal">(1,<sp/>1,<sp/>1):<sp/>([-1,<sp/>-1],<sp/>[5.292,<sp/>0],<sp/>[-1,<sp/>-1],<sp/>[-1,<sp/>-1],<sp/>[3.098,<sp/>0],<sp/>[5.407,<sp/>0],<sp/>[13.07,<sp/>0],<sp/>[-1,<sp/>-1],<sp/>[3.529,<sp/>0],<sp/>[-1,<sp/>-1])</highlight></codeline>
<codeline><highlight class="normal">(0,<sp/>0,<sp/>3):<sp/>([-1,<sp/>-1],<sp/>[9.211,<sp/>0],<sp/>[-1,<sp/>-1],<sp/>[-1,<sp/>-1],<sp/>[5.394,<sp/>0],<sp/>[9.413,<sp/>0],<sp/>[-1,<sp/>-1],<sp/>[-1,<sp/>-1],<sp/>[6.144,<sp/>0],<sp/>[-1,<sp/>-1])</highlight></codeline>
</programlisting> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/viewanalysis/src/ViewAnalysis.cs" line="141" column="35"/>
      </memberdef>
      <memberdef kind="function" id="class_human_factors_1_1_view_analysis_1_1_view_analysis_1abc1d51bdf752a4fa36af012e90cc8acb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="class_human_factors_1_1_view_analysis_1_1_direction_array" kindref="compound">DirectionArray</ref></type>
        <definition>static DirectionArray HumanFactors.ViewAnalysis.ViewAnalysis.SphericallyDistributeRays</definition>
        <argsstring>(int num_rays, float upward_fov=50f, float downward_fov=70f)</argsstring>
        <name>SphericallyDistributeRays</name>
        <param>
          <type>int</type>
          <declname>num_rays</declname>
        </param>
        <param>
          <type>float</type>
          <declname>upward_fov</declname>
          <defval>50f</defval>
        </param>
        <param>
          <type>float</type>
          <declname>downward_fov</declname>
          <defval>70f</defval>
        </param>
        <briefdescription>
<para>Distribute a set of points equally on a unit sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>num_rays</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of points to distribute. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>upward_fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum angle above the sphere to generate points in degrees, </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>downward_fov</parametername>
</parameternamelist>
<parameterdescription>
<para>Maximum angle in degrees downwards to generate.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An array of equally distributed points on a unit sphere.</para>
</simplesect>
<simplesect kind="warning"><para>The number of rays casted may not exactly match <computeroutput>ray_count</computeroutput> depending on the provided field of view restrictions.</para>
</simplesect>
<simplesect kind="note"><para>This is the same function used internally by view analysis to equally distribute ray directions.</para>
</simplesect>
<simplesect kind="par"><title>Example</title><para><programlisting filename="viewanalysis\test_viewanalysis.cs"><codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Equally<sp/>distribute<sp/>10<sp/>rays</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>results<sp/>=<sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_view_analysis" kindref="compound">ViewAnalysis</ref>.<ref refid="class_human_factors_1_1_view_analysis_1_1_view_analysis" kindref="compound">ViewAnalysis</ref>.<ref refid="class_human_factors_1_1_view_analysis_1_1_view_analysis_1abc1d51bdf752a4fa36af012e90cc8acb" kindref="member">SphericallyDistributeRays</ref>(10);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>results</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(results);</highlight></codeline>
<codeline><highlight class="normal"></highlight></codeline>
</programlisting><computeroutput>[0, -1, 0, -0.2650034, -0.8181818, . . . -0.7649929, 0.4396428, 0.8181818, 0.3705303]</computeroutput> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/viewanalysis/src/ViewAnalysis.cs" line="178" column="38"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Functions for analyzing the view of an observer in an environment at human scale. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="note"><para>All of these functions internally use a raytracer, so a <ref refid="class_human_factors_1_1_ray_tracing_1_1_embree_b_v_h" kindref="compound">HumanFactors.RayTracing.EmbreeBVH</ref> is required. </para>
</simplesect>
</para>
    </detaileddescription>
    <location file="src/Csharp/packages/viewanalysis/src/ViewAnalysis.cs" line="51" column="19" bodyfile="src/Csharp/packages/viewanalysis/src/ViewAnalysis.cs" bodystart="52" bodyend="183"/>
    <listofallmembers>
      <member refid="class_human_factors_1_1_view_analysis_1_1_view_analysis_1abc1d51bdf752a4fa36af012e90cc8acb" prot="public" virt="non-virtual"><scope>HumanFactors::ViewAnalysis::ViewAnalysis</scope><name>SphericallyDistributeRays</name></member>
      <member refid="class_human_factors_1_1_view_analysis_1_1_view_analysis_1a1cdb30c740e2efd5a1a01ef633c734ac" prot="public" virt="non-virtual"><scope>HumanFactors::ViewAnalysis::ViewAnalysis</scope><name>ViewAnalysisAggregate</name></member>
      <member refid="class_human_factors_1_1_view_analysis_1_1_view_analysis_1aec86f6a5bbc392de04357465994bab39" prot="public" virt="non-virtual"><scope>HumanFactors::ViewAnalysis::ViewAnalysis</scope><name>ViewAnalysisStandard</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

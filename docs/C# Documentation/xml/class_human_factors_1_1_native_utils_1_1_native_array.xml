<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="class_human_factors_1_1_native_utils_1_1_native_array" kind="class" language="C#" prot="public">
    <compoundname>HumanFactors::NativeUtils::NativeArray</compoundname>
    <basecompoundref refid="class_human_factors_1_1_native_utils_1_1_native_object" prot="public" virt="non-virtual">HumanFactors.NativeUtils.NativeObject</basecompoundref>
    <derivedcompoundref refid="class_human_factors_1_1_native_utils_1_1_native_array2_d" prot="public" virt="non-virtual">HumanFactors.NativeUtils.NativeArray2D&lt; T &gt;</derivedcompoundref>
    <templateparamlist>
      <param>
        <type>T</type>
      </param>
    </templateparamlist>
      <sectiondef kind="property">
      <memberdef kind="property" id="class_human_factors_1_1_native_utils_1_1_native_array_1a9304ed6a5641e9bde42756d3e2a9f52c" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>unsafe Span&lt; T &gt;</type>
        <definition>virtual unsafe Span&lt;T&gt; HumanFactors.NativeUtils.NativeArray&lt; T &gt;.array</definition>
        <argsstring></argsstring>
        <name>array</name>
        <briefdescription>
<para>Read only access to this unmanaged array as a span. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A Span&lt;T&gt; referencing the entirety of the unmanaged array.</para>
</simplesect>
<simplesect kind="remark"><para>This only returns a reference to the unmanaged array, not a copy.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_human_factors_1_1_native_utils_1_1_native_array_1a9ea74c37970f76b067ebae91b6918c8c" kindref="member">CopyArray</ref> for a function that copies the contents of the <ref refid="class_human_factors_1_1_native_utils_1_1_native_array_1a9304ed6a5641e9bde42756d3e2a9f52c" kindref="member">array</ref>. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="129" column="36" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="129" bodyend="129"/>
        <referencedby refid="class_human_factors_1_1_native_utils_1_1_native_array_1a017a7b3798ef74f6603cfb88614f87b0" compoundref="_pointer_holder_8cs" startline="202" endline="215">HumanFactors.NativeUtils.NativeArray&lt; RayResult &gt;::Equals</referencedby>
        <referencedby refid="class_human_factors_1_1_native_utils_1_1_native_array_1a02ec6be681dc2006c5eb725ce59a9999" compoundref="_pointer_holder_8cs" startline="142" endline="168">HumanFactors.NativeUtils.NativeArray&lt; RayResult &gt;::ToString</referencedby>
      </memberdef>
      <memberdef kind="property" id="class_human_factors_1_1_native_utils_1_1_native_array_1ab5ae2b7453b45c8f94c54a21ce60506d" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>unsafe T</type>
        <definition>unsafe T HumanFactors.NativeUtils.NativeArray&lt; T &gt;.this[int key]</definition>
        <argsstring></argsstring>
        <name>this[int key]</name>
        <briefdescription>
<para>Get the element at location i. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="188" column="25" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="189" bodyend="199"/>
      </memberdef>
      <memberdef kind="property" id="class_human_factors_1_1_native_utils_1_1_native_array_1a08f9370818434ce452d8113466c8a0f0" prot="public" static="no" readable="no" writable="no" gettable="yes" privategettable="no" protectedgettable="no" settable="no" privatesettable="no" protectedsettable="no">
        <type>int</type>
        <definition>virtual int HumanFactors.NativeUtils.NativeArray&lt; T &gt;.size</definition>
        <argsstring></argsstring>
        <name>size</name>
        <briefdescription>
<para>The number of elements in the array. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="223" column="28" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="223" bodyend="223"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-attrib">
      <memberdef kind="variable" id="class_human_factors_1_1_native_utils_1_1_native_array_1a53f1d544231f6a628bb83b982afcb4d5" prot="package" static="no" mutable="no">
        <type><ref refid="struct_human_factors_1_1_native_utils_1_1_c_vector_and_data" kindref="compound">CVectorAndData</ref></type>
        <definition>CVectorAndData HumanFactors.NativeUtils.NativeArray&lt; T &gt;.ptrs</definition>
        <argsstring></argsstring>
        <name>ptrs</name>
        <briefdescription>
<para>Data and vector pointers. Used for the construction of new spans and the freeing of resources when this object is finalized. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="220" column="33" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="220" bodyend="-1"/>
        <referencedby refid="class_human_factors_1_1_native_utils_1_1_native_array_1a79ef9c2b4668b2d1c0a16bae6cd5e4e1" compoundref="_pointer_holder_8cs" startline="113" endline="118">HumanFactors.NativeUtils.NativeArray&lt; RayResult &gt;::CalcTSize</referencedby>
        <referencedby refid="class_human_factors_1_1_native_utils_1_1_native_array_1a9ea74c37970f76b067ebae91b6918c8c" compoundref="_pointer_holder_8cs" startline="180" endline="185">HumanFactors.NativeUtils.NativeArray&lt; RayResult &gt;::CopyArray</referencedby>
        <referencedby refid="class_human_factors_1_1_native_utils_1_1_native_array_1a7937d264e0ecfc2e59da02f385c4cf09" compoundref="_pointer_holder_8cs" startline="231" endline="233">HumanFactors.NativeUtils.NativeArray&lt; RayResult &gt;::NativeArray</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="class_human_factors_1_1_native_utils_1_1_native_array_1a79ef9c2b4668b2d1c0a16bae6cd5e4e1" prot="private" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>int</type>
        <definition>static int HumanFactors.NativeUtils.NativeArray&lt; T &gt;.CalcTSize</definition>
        <argsstring>(CVectorAndData ptrs, int num_elements_override=-1)</argsstring>
        <name>CalcTSize</name>
        <param>
          <type><ref refid="struct_human_factors_1_1_native_utils_1_1_c_vector_and_data" kindref="compound">CVectorAndData</ref></type>
          <declname>ptrs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>num_elements_override</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Calculate the size of our struct so we can properly set the pressure. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>The size of the struct in bytes.</para>
</simplesect>
<linebreak/>
 The size of T is automatically calculated and multiplied by the number of elements to get the number of bytes occupied by this object in unmanaged memory. This ignores the inherent size of a C++ vector but is accurate enough to improve the performance of the garbage collector.</para>
<para><simplesect kind="remark"><para>Future improvements could include the size of a C++ vector in the calculation. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="113" column="20" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="113" bodyend="118"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_human_factors_1_1_native_utils_1_1_native_array_1a02ec6be681dc2006c5eb725ce59a9999" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe override string</type>
        <definition>unsafe override string HumanFactors.NativeUtils.NativeArray&lt; T &gt;.ToString</definition>
        <argsstring>()</argsstring>
        <name>ToString</name>
        <briefdescription>
<para>Get a string representation of this array. </para>
        </briefdescription>
        <detaileddescription>
<para><xrefsect id="todo_1_todo000002"><xreftitle>Todo</xreftitle><xrefdescription><para>Optional toggle for truncation, and modifiable truncation threshold.</para>
</xrefdescription></xrefsect></para>
<para><simplesect kind="return"><para>Return a string representation of all elements in this array, truncating it if necessary. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="142" column="39" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="142" bodyend="168"/>
        <referencedby refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a6421033cc6aa5da057d70d7b82d16dc1" compoundref="overall__examples_8cs" startline="71" endline="125">Humanfctors.Examples.OverallExamples.GeneratePathsWithCostAlgorithms</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_human_factors_1_1_native_utils_1_1_native_array_1a9ea74c37970f76b067ebae91b6918c8c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>T[]</type>
        <definition>virtual T [] HumanFactors.NativeUtils.NativeArray&lt; T &gt;.CopyArray</definition>
        <argsstring>()</argsstring>
        <name>CopyArray</name>
        <briefdescription>
<para>Copy the unmanaged array pointed to by this object into a managed array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A deep copy of the unmanaged array in managed memory.</para>
</simplesect>
<simplesect kind="remark"><para>In most cases it is recommended to use the array property, as it saves time and memory by not copying the data into managed memory. If you must use this function to copy a large array, consider Freeing the native memory of this class by calling ReleaseHandle shortly after. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="180" column="26" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="180" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="class_human_factors_1_1_native_utils_1_1_native_array_1a017a7b3798ef74f6603cfb88614f87b0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool HumanFactors.NativeUtils.NativeArray&lt; T &gt;.Equals</definition>
        <argsstring>(NativeArray&lt; T &gt; arr2)</argsstring>
        <name>Equals</name>
        <param>
          <type><ref refid="class_human_factors_1_1_native_utils_1_1_native_array" kindref="compound">NativeArray</ref>&lt; T &gt;</type>
          <declname>arr2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="202" column="21" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="202" bodyend="215"/>
        <referencedby refid="class_human_factors_1_1_native_utils_1_1_native_array_1a017a7b3798ef74f6603cfb88614f87b0" compoundref="_pointer_holder_8cs" startline="202" endline="215">HumanFactors.NativeUtils.NativeArray&lt; RayResult &gt;::Equals</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="package-func">
      <memberdef kind="function" id="class_human_factors_1_1_native_utils_1_1_native_array_1a7937d264e0ecfc2e59da02f385c4cf09" prot="package" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>unsafe</type>
        <definition>unsafe HumanFactors.NativeUtils.NativeArray&lt; T &gt;.NativeArray</definition>
        <argsstring>(CVectorAndData ptrs, int size=-1)</argsstring>
        <name>NativeArray</name>
        <param>
          <type><ref refid="struct_human_factors_1_1_native_utils_1_1_c_vector_and_data" kindref="compound">CVectorAndData</ref></type>
          <declname>ptrs</declname>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>Construct a new native array to wrap an unmanaged array in C++ </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ptrs</parametername>
</parameternamelist>
<parameterdescription>
<para>Information about the vector to wrap </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>The size in bytes of this array in unmanaged memory. If set to -1, the size will automatically be calculated. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="231" column="25" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="231" bodyend="233"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A read-only array stored in unmanaged memory. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>T</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of the array pointed to in unmanaged memory.</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="remark"><para>This type is used throughout the codebase to access arrays in unmanaged memory. Note that the memory stored here is immutable.</para>
</simplesect>
<simplesect kind="see"><para><ref refid="class_human_factors_1_1_native_utils_1_1_native_array_1a9304ed6a5641e9bde42756d3e2a9f52c" kindref="member">array</ref> to access the data of this <ref refid="class_human_factors_1_1_native_utils_1_1_native_array_1a9304ed6a5641e9bde42756d3e2a9f52c" kindref="member">array</ref> in a readable format</para>
</simplesect>
</para>
<internal><para><xrefsect id="todo_1_todo000001"><xreftitle>Todo</xreftitle><xrefdescription><para>Implement a squarebrackets operator for this </para>
</xrefdescription></xrefsect></para>
</internal>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>HumanFactors.NativeUtils.NativeArray&lt; T &gt;</label>
        <link refid="class_human_factors_1_1_native_utils_1_1_native_array"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>NativeObject</label>
        <link refid="class_human_factors_1_1_native_utils_1_1_native_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="4">
        <label>HumanFactors::NativeUtils::NativeArray2D&lt; T &gt;</label>
        <link refid="class_human_factors_1_1_native_utils_1_1_native_array2_d"/>
        <childnode refid="1" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>SafeHandle</label>
        <link refid="class_safe_handle"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>HumanFactors.NativeUtils.NativeArray&lt; T &gt;</label>
        <link refid="class_human_factors_1_1_native_utils_1_1_native_array"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
        <childnode refid="6" relation="usage">
          <edgelabel>ptrs</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>IntPtr</label>
      </node>
      <node id="2">
        <label>NativeObject</label>
        <link refid="class_human_factors_1_1_native_utils_1_1_native_object"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
        <childnode refid="4" relation="usage">
          <edgelabel>IsInvalid</edgelabel>
        </childnode>
        <childnode refid="5" relation="usage">
          <edgelabel>pressure</edgelabel>
        </childnode>
      </node>
      <node id="5">
        <label>int</label>
      </node>
      <node id="3">
        <label>SafeHandle</label>
        <link refid="class_safe_handle"/>
      </node>
      <node id="6">
        <label>HumanFactors.NativeUtils.CVectorAndData</label>
        <link refid="struct_human_factors_1_1_native_utils_1_1_c_vector_and_data"/>
        <childnode refid="5" relation="usage">
          <edgelabel>size</edgelabel>
          <edgelabel>size2</edgelabel>
        </childnode>
        <childnode refid="7" relation="usage">
          <edgelabel>vector</edgelabel>
          <edgelabel>data</edgelabel>
        </childnode>
      </node>
      <node id="4">
        <label>override bool</label>
      </node>
    </collaborationgraph>
    <location file="src/Csharp/packages/base/src/PointerHolder.cs" line="97" column="21" bodyfile="src/Csharp/packages/base/src/PointerHolder.cs" bodystart="98" bodyend="234"/>
    <listofallmembers>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1a9304ed6a5641e9bde42756d3e2a9f52c" prot="public" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>array</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1a79ef9c2b4668b2d1c0a16bae6cd5e4e1" prot="private" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>CalcTSize</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1a9ea74c37970f76b067ebae91b6918c8c" prot="public" virt="virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>CopyArray</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1a017a7b3798ef74f6603cfb88614f87b0" prot="public" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>Equals</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_object_1a33340c37b83300ec09f6fc7982d2fb70" prot="public" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>IsInvalid</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1a7937d264e0ecfc2e59da02f385c4cf09" prot="package" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>NativeArray</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_object_1ae7f34573598d48a9ef666b96895c7201" prot="public" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>NativeObject</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_object_1aa58c089e79cb4acc260755a41952d3d6" prot="package" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>Pointer</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_object_1a46b2320d66a2b0405024db48f376b72c" prot="public" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>pressure</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1a53f1d544231f6a628bb83b982afcb4d5" prot="package" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>ptrs</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1a08f9370818434ce452d8113466c8a0f0" prot="public" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>size</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1ab5ae2b7453b45c8f94c54a21ce60506d" prot="public" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>this[int key]</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_array_1a02ec6be681dc2006c5eb725ce59a9999" prot="public" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>ToString</name></member>
      <member refid="class_human_factors_1_1_native_utils_1_1_native_object_1a062ff788763ba2ad52a7c20000c8ecd8" prot="private" virt="non-virtual"><scope>HumanFactors::NativeUtils::NativeArray</scope><name>~NativeObject</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>

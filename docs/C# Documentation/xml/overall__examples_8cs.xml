<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.18">
  <compounddef id="overall__examples_8cs" kind="file" language="C#">
    <compoundname>overall_examples.cs</compoundname>
    <innerclass refid="class_humanfctors_1_1_examples_1_1_overall_examples" prot="public">Humanfctors::Examples::OverallExamples</innerclass>
    <innernamespace refid="namespace_humanfctors">Humanfctors</innernamespace>
    <innernamespace refid="namespace_humanfctors_1_1_examples">Humanfctors::Examples</innernamespace>
    <innernamespace refid="namespace_microsoft_1_1_visual_studio_1_1_test_tools_1_1_unit_testing">Microsoft::VisualStudio::TestTools::UnitTesting</innernamespace>
    <innernamespace refid="namespace_system_1_1_diagnostics">System::Diagnostics</innernamespace>
    <innernamespace refid="namespace_system">System</innernamespace>
    <innernamespace refid="namespace_system_1_1_text_1_1_regular_expressions">System::Text::RegularExpressions</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_graph_generator" kindref="compound">GraphGenerator</ref>;</highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_spatial_structures" kindref="compound">SpatialStructures</ref>;</highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_geometry" kindref="compound">Geometry</ref>;</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_ray_tracing" kindref="compound">RayTracing</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_pathfinding" kindref="compound">Pathfinding</ref>;</highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>Microsoft.VisualStudio.TestTools.UnitTesting;</highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>;</highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Diagnostics;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="keyword">using</highlight><highlight class="normal"><sp/>System.Text.RegularExpressions;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight></codeline>
<codeline lineno="12" refid="namespace_humanfctors_1_1_examples" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_humanfctors_1_1_examples" kindref="compound">Humanfctors.Examples</ref></highlight></codeline>
<codeline lineno="13"><highlight class="normal">{</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>[TestClass]</highlight></codeline>
<codeline lineno="15" refid="class_humanfctors_1_1_examples_1_1_overall_examples" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples" kindref="compound">OverallExamples</ref></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="18" refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac4fb40ae68308fecdf8d169cd5de5ce6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac4fb40ae68308fecdf8d169cd5de5ce6" kindref="member">CompareOutputToExpected</ref>(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expected,<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>actual)</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>normalized_expected<sp/>=<sp/>Regex.Replace(expected,<sp/></highlight><highlight class="stringliteral">@&quot;\s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>normalized_actual<sp/>=<sp/>Regex.Replace(actual,<sp/></highlight><highlight class="stringliteral">@&quot;\s&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(normalized_expected,<sp/>normalized_actual);</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a17a9e1bbc4b6fedf48ded818e2b30bb8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_graph" kindref="compound">Graph</ref><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a17a9e1bbc4b6fedf48ded818e2b30bb8" kindref="member">GenerateExampleGraph</ref>()</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Load<sp/>the<sp/>OBJ<sp/>from<sp/>ddisk</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>blob<sp/>=<sp/><ref refid="class_human_factors_1_1_geometry_1_1_o_b_j_loader" kindref="compound">OBJLoader</ref>.<ref refid="class_human_factors_1_1_geometry_1_1_o_b_j_loader_1a098857909670796a533833086d753fb2" kindref="member">LoadOBJ</ref>(</highlight><highlight class="stringliteral">&quot;ExampleModels/energy_blob_zup.obj&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>BVH<sp/>from<sp/>it<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_ray_tracing_1_1_embree_b_v_h" kindref="compound">EmbreeBVH</ref><sp/>bvh<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_human_factors_1_1_ray_tracing_1_1_embree_b_v_h" kindref="compound">EmbreeBVH</ref>(blob);</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Setup<sp/>graph<sp/>variables</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref><sp/>start_point<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>(-30,<sp/>0,<sp/>20);</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref><sp/>spacing<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>(1,<sp/>1,<sp/>10);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_nodes<sp/>=<sp/>10000;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>up_step<sp/>=<sp/>5.0f;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>down_step<sp/>=<sp/>5.0f;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>up_slope<sp/>=<sp/>60.0f;</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>down_slope<sp/>=<sp/>60.0f;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>max_step_connections<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>graph<sp/>=<sp/><ref refid="namespace_human_factors" kindref="compound">HumanFactors</ref>.<ref refid="namespace_human_factors_1_1_graph_generator" kindref="compound">GraphGenerator</ref>.<ref refid="class_human_factors_1_1_graph_generator_1_1_graph_generator" kindref="compound">GraphGenerator</ref>.<ref refid="class_human_factors_1_1_graph_generator_1_1_graph_generator_1a2672814edcde623d71233353fe6e0d2f" kindref="member">GenerateGraph</ref>(</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bvh,</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_point,</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>spacing,</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_nodes,</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up_step,</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down_step,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up_slope,</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down_slope,</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>max_step_connections,</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>-1</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compress<sp/>the<sp/>graph<sp/>so<sp/>we<sp/>can<sp/>use<sp/>it<sp/>with<sp/>pathfinding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>graph.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a84a7286932920179d90a63cfd8ada207" kindref="member">CompressToCSR</ref>();</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Calculate<sp/>an<sp/>alternate<sp/>set<sp/>of<sp/>costs<sp/>for<sp/>the<sp/>graph<sp/>based<sp/>on<sp/>Energy<sp/>Expenditure</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_cost_algorithms" kindref="compound">CostAlgorithms</ref>.<ref refid="class_human_factors_1_1_spatial_structures_1_1_cost_algorithms_1abc3e72806a517518dc8d40c96e818939" kindref="member">CalculateAndStoreEnergyExpenditure</ref>(graph);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>graph;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod]</highlight></codeline>
<codeline lineno="71" refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a6421033cc6aa5da057d70d7b82d16dc1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a6421033cc6aa5da057d70d7b82d16dc1" kindref="member">GeneratePathsWithCostAlgorithms</ref>()</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>graph<sp/>=<sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a17a9e1bbc4b6fedf48ded818e2b30bb8" kindref="member">GenerateExampleGraph</ref>();</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Predeclare<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_path" kindref="compound">Path</ref><sp/>energy_path,<sp/>distance_path;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>unique<sp/>key<sp/>of<sp/>this<sp/>cost<sp/>type.<sp/>We&apos;ll<sp/>use<sp/>this<sp/>to<sp/>tell<sp/>the<sp/>pathfinder<sp/>to<sp/>generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>path<sp/>using<sp/>the<sp/>cost<sp/>set<sp/>that<sp/>we<sp/>just<sp/>generated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>energy_key<sp/>=<sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_cost_algorithm_names" kindref="compound">CostAlgorithmNames</ref>.<ref refid="class_human_factors_1_1_spatial_structures_1_1_cost_algorithm_names_1aadcfbad9347a58519714d6ce7db18280" kindref="member">ENERGY_EXPENDITURE</ref>;</highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>graph<sp/>using<sp/>the<sp/>alternate<sp/>cost<sp/>type,<sp/>then<sp/>generate<sp/>one<sp/>using<sp/>the<sp/>graph&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>cost<sp/>type,<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_id<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_id<sp/>=<sp/>105;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy_path<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1adc3fbf31af391a4ce9efd911c0c74fee" kindref="member">DijkstraShortestPath</ref>(graph,<sp/>start_id,<sp/>end_id,<sp/>energy_key);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance_path<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1adc3fbf31af391a4ce9efd911c0c74fee" kindref="member">DijkstraShortestPath</ref>(graph,<sp/>start_id,<sp/>end_id);</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="96"></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>nodes<sp/>from<sp/>the<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>nodes<sp/>=<sp/>graph.getNodes();</highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Convert<sp/>these<sp/>to<sp/>Vector3D<sp/>for<sp/>use<sp/>in<sp/>pathfinding</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>start_node<sp/>=<sp/>nodes[1].ToVector3D();</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>end_node<sp/>=<sp/>nodes[105].ToVector3D();</highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>paths<sp/>using<sp/>these<sp/>nodes.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>energy_path<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1adc3fbf31af391a4ce9efd911c0c74fee" kindref="member">DijkstraShortestPath</ref>(graph,<sp/>start_node,<sp/>end_node,<sp/>energy_key);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>distance_path<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1adc3fbf31af391a4ce9efd911c0c74fee" kindref="member">DijkstraShortestPath</ref>(graph,<sp/>end_node,<sp/>start_node);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>paths<sp/>to<sp/>output.<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(distance_path);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(energy_path);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expected_distance<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[(105,<sp/>1.421),<sp/>(32,<sp/>1.007),<sp/>(6,<sp/>1.005),<sp/>(4,<sp/>1.001),<sp/>(1,<sp/>0)]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expected_energy<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;[(1,<sp/>4.559),<sp/>(12,<sp/>5.759),<sp/>(26,<sp/>5.89),<sp/>(39,<sp/>6.101),<sp/>(50,<sp/>2.978),<sp/>(63,<sp/>2.827),<sp/>(80,<sp/>2.785),<sp/>(105,<sp/>0)]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac4fb40ae68308fecdf8d169cd5de5ce6" kindref="member">CompareOutputToExpected</ref>(expected_distance,<sp/>distance_path.<ref refid="class_human_factors_1_1_native_utils_1_1_native_array_1a02ec6be681dc2006c5eb725ce59a9999" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac4fb40ae68308fecdf8d169cd5de5ce6" kindref="member">CompareOutputToExpected</ref>(expected_energy,<sp/>energy_path.<ref refid="class_human_factors_1_1_native_utils_1_1_native_array_1a02ec6be681dc2006c5eb725ce59a9999" kindref="member">ToString</ref>());</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod]</highlight></codeline>
<codeline lineno="128" refid="class_humanfctors_1_1_examples_1_1_overall_examples_1aca2691944e85bed386f4cbf68354b8b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1aca2691944e85bed386f4cbf68354b8b1" kindref="member">DijkstraShortestPathMulti</ref>()</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>graph<sp/>=<sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a17a9e1bbc4b6fedf48ded818e2b30bb8" kindref="member">GenerateExampleGraph</ref>();</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>unique<sp/>key<sp/>of<sp/>this<sp/>cost<sp/>type.<sp/>We&apos;ll<sp/>use<sp/>this<sp/>to<sp/>tell<sp/>the<sp/>pathfinder<sp/>to<sp/>generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>path<sp/>using<sp/>the<sp/>cost<sp/>set<sp/>that<sp/>we<sp/>just<sp/>generated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>energy_key<sp/>=<sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_cost_algorithm_names" kindref="compound">CostAlgorithmNames</ref>.<ref refid="class_human_factors_1_1_spatial_structures_1_1_cost_algorithm_names_1aadcfbad9347a58519714d6ce7db18280" kindref="member">ENERGY_EXPENDITURE</ref>;</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>graph<sp/>using<sp/>the<sp/>alternate<sp/>cost<sp/>type,<sp/>then<sp/>generate<sp/>one<sp/>using<sp/>the<sp/>graph&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>cost<sp/>type,<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>start_ids<sp/>=<sp/>{1,<sp/>2,<sp/>3,<sp/>4};</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">[]<sp/>end_ids<sp/>=<sp/>{101,<sp/>102,<sp/>103,<sp/>104};</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_path" kindref="compound">Path</ref>[]<sp/>energy_path<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1ab7f58f298125194e33d6c69ed4797442" kindref="member">DijkstraShortestPathMulti</ref>(graph,<sp/>start_ids,<sp/>end_ids,<sp/>energy_key);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_path" kindref="compound">Path</ref>[]<sp/>distance_path<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1ab7f58f298125194e33d6c69ed4797442" kindref="member">DijkstraShortestPathMulti</ref>(graph,<sp/>start_ids,<sp/>end_ids);</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>output<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>every<sp/>pair<sp/>of<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>start_ids.Length;<sp/>i++)</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>String.Format(</highlight><highlight class="stringliteral">&quot;{0}<sp/>to<sp/>{1}<sp/>Energy<sp/><sp/>:<sp/>{2}&quot;</highlight><highlight class="normal">,<sp/>start_ids[i],<sp/>end_ids[i],<sp/>energy_path[i])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>String.Format(</highlight><highlight class="stringliteral">&quot;{0}<sp/>to<sp/>{1}<sp/>Distance:<sp/>{2}&quot;</highlight><highlight class="normal">,<sp/>start_ids[i],<sp/>end_ids[i],<sp/>distance_path[i])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(output);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expected_output<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;1<sp/>to<sp/>101<sp/>Energy<sp/><sp/>:<sp/>[(1,<sp/>2.461),<sp/>(11,<sp/>2.5),<sp/>(24,<sp/>2.5),<sp/>(36,<sp/>4.491),<sp/>(47,<sp/>5.402),<sp/>(60,<sp/>5.302),<sp/>(77,<sp/>5.129),<sp/>(101,<sp/>0)]</highlight></codeline>
<codeline lineno="159"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>to<sp/>101<sp/>Distance:<sp/>[(1,<sp/>1),<sp/>(11,<sp/>1),<sp/>(24,<sp/>1),<sp/>(36,<sp/>1.415),<sp/>(47,<sp/>1.417),<sp/>(60,<sp/>1.416),<sp/>(77,<sp/>1.416),<sp/>(101,<sp/>0)]</highlight></codeline>
<codeline lineno="160"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>to<sp/>102<sp/>Energy<sp/><sp/>:<sp/>[(2,<sp/>2.5),<sp/>(1,<sp/>2.461),<sp/>(11,<sp/>2.5),<sp/>(24,<sp/>4.536),<sp/>(37,<sp/>5.528),<sp/>(48,<sp/>5.452),<sp/>(61,<sp/>5.605),<sp/>(78,<sp/>5.837),<sp/>(102,<sp/>0)]</highlight></codeline>
<codeline lineno="161"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>to<sp/>102<sp/>Distance:<sp/>[(2,<sp/>1),<sp/>(1,<sp/>1),<sp/>(11,<sp/>1),<sp/>(24,<sp/>1.415),<sp/>(37,<sp/>1.417),<sp/>(48,<sp/>1.417),<sp/>(61,<sp/>1.417),<sp/>(78,<sp/>1.418),<sp/>(102,<sp/>0)]</highlight></codeline>
<codeline lineno="162"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>to<sp/>103<sp/>Energy<sp/><sp/>:<sp/>[(3,<sp/>2.52),<sp/>(2,<sp/>2.5),<sp/>(1,<sp/>4.559),<sp/>(12,<sp/>2.48),<sp/>(25,<sp/>5.708),<sp/>(38,<sp/>5.656),<sp/>(49,<sp/>5.916),<sp/>(62,<sp/>6.644),<sp/>(79,<sp/>5.08),<sp/>(103,<sp/>0)]</highlight></codeline>
<codeline lineno="163"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>to<sp/>103<sp/>Distance:<sp/>[(3,<sp/>1),<sp/>(2,<sp/>1),<sp/>(1,<sp/>1.415),<sp/>(12,<sp/>1),<sp/>(25,<sp/>1.417),<sp/>(38,<sp/>1.417),<sp/>(49,<sp/>1.418),<sp/>(62,<sp/>1.42),<sp/>(79,<sp/>1.416),<sp/>(103,<sp/>0)]</highlight></codeline>
<codeline lineno="164"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>to<sp/>104<sp/>Energy<sp/><sp/>:<sp/>[(4,<sp/>2.48),<sp/>(12,<sp/>5.759),<sp/>(26,<sp/>5.89),<sp/>(39,<sp/>6.101),<sp/>(50,<sp/>7.008),<sp/>(64,<sp/>5.863),<sp/>(83,<sp/>3.827),<sp/>(104,<sp/>0)]</highlight></codeline>
<codeline lineno="165"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>4<sp/>to<sp/>104<sp/>Distance:<sp/>[(4,<sp/>1),<sp/>(12,<sp/>1.418),<sp/>(26,<sp/>1.418),<sp/>(39,<sp/>1.418),<sp/>(50,<sp/>1.421),<sp/>(64,<sp/>1.418),<sp/>(83,<sp/>1.002),<sp/>(104,<sp/>0)]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac4fb40ae68308fecdf8d169cd5de5ce6" kindref="member">CompareOutputToExpected</ref>(expected_output,<sp/>output);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod]</highlight></codeline>
<codeline lineno="172" refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a3eb31ff06d9be8956d9e34a45276f29a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a3eb31ff06d9be8956d9e34a45276f29a" kindref="member">DijkstraShortestPathMultiNodes</ref>()</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>graph<sp/>=<sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a17a9e1bbc4b6fedf48ded818e2b30bb8" kindref="member">GenerateExampleGraph</ref>();</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String<sp/>output<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>the<sp/>unique<sp/>key<sp/>of<sp/>this<sp/>cost<sp/>type.<sp/>We&apos;ll<sp/>use<sp/>this<sp/>to<sp/>tell<sp/>the<sp/>pathfinder<sp/>to<sp/>generate</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>a<sp/>path<sp/>using<sp/>the<sp/>cost<sp/>set<sp/>that<sp/>we<sp/>just<sp/>generated.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>energy_key<sp/>=<sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_cost_algorithm_names" kindref="compound">CostAlgorithmNames</ref>.<ref refid="class_human_factors_1_1_spatial_structures_1_1_cost_algorithm_names_1aadcfbad9347a58519714d6ce7db18280" kindref="member">ENERGY_EXPENDITURE</ref>;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Get<sp/>nodes<sp/>from<sp/>the<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>nodes<sp/>=<sp/>graph.getNodes();</highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>a<sp/>graph<sp/>using<sp/>the<sp/>alternate<sp/>cost<sp/>type,<sp/>then<sp/>generate<sp/>one<sp/>using<sp/>the<sp/>graph&apos;s</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>default<sp/>cost<sp/>type,<sp/>distance.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>[]<sp/>start_nodes<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[0].ToVector3D(),</highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[1].ToVector3D(),</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[2].ToVector3D(),</highlight></codeline>
<codeline lineno="193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[3].ToVector3D()</highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>[]<sp/>end_nodes<sp/>=<sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[101].ToVector3D(),</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[102].ToVector3D(),</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[103].ToVector3D(),</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes[104].ToVector3D()</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_path" kindref="compound">Path</ref>[]<sp/>energy_path<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1ab7f58f298125194e33d6c69ed4797442" kindref="member">DijkstraShortestPathMulti</ref>(graph,<sp/>start_nodes,<sp/>end_nodes,<sp/>energy_key);</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_path" kindref="compound">Path</ref>[]<sp/>distance_path<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1ab7f58f298125194e33d6c69ed4797442" kindref="member">DijkstraShortestPathMulti</ref>(graph,<sp/>start_nodes,<sp/>end_nodes);</highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>out<sp/>every<sp/>pair<sp/>of<sp/>paths</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>start_nodes.Length;<sp/>i++)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>String.Format(</highlight><highlight class="stringliteral">&quot;{0}<sp/>to<sp/>{1}<sp/>Energy<sp/><sp/>:<sp/>{2}&quot;</highlight><highlight class="normal">,<sp/>start_nodes[i],<sp/>end_nodes[i],<sp/>energy_path[i])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>String.Format(</highlight><highlight class="stringliteral">&quot;{0}<sp/>to<sp/>{1}<sp/>Distance:<sp/>{2}&quot;</highlight><highlight class="normal">,<sp/>start_nodes[i],<sp/>end_nodes[i],<sp/>distance_path[i])<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(output);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>this<sp/>output<sp/>to<sp/>the<sp/>expected<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expected_output<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;(-30,<sp/>0,<sp/>1.068)<sp/>to<sp/>(-27,<sp/>-8,<sp/>1.295)<sp/>Energy<sp/><sp/>:<sp/>[(0,<sp/>2.48),<sp/>(4,<sp/>2.48),<sp/>(12,<sp/>2.48),<sp/>(25,<sp/>2.461),<sp/>(37,<sp/>2.461),<sp/>(47,<sp/>5.402),<sp/>(60,<sp/>5.302),<sp/>(77,<sp/>5.129),<sp/>(101,<sp/>0)]</highlight></codeline>
<codeline lineno="218"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-30,<sp/>0,<sp/>1.068)<sp/>to<sp/>(-27,<sp/>-8,<sp/>1.295)<sp/>Distance:<sp/>[(0,<sp/>1),<sp/>(4,<sp/>1),<sp/>(12,<sp/>1),<sp/>(25,<sp/>1),<sp/>(37,<sp/>1),<sp/>(47,<sp/>1.417),<sp/>(60,<sp/>1.416),<sp/>(77,<sp/>1.416),<sp/>(101,<sp/>0)]</highlight></codeline>
<codeline lineno="219"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-31,<sp/>-1,<sp/>1.018)<sp/>to<sp/>(-26,<sp/>-8,<sp/>1.427)<sp/>Energy<sp/><sp/>:<sp/>[(1,<sp/>2.461),<sp/>(11,<sp/>2.5),<sp/>(24,<sp/>4.536),<sp/>(37,<sp/>5.528),<sp/>(48,<sp/>5.452),<sp/>(61,<sp/>5.605),<sp/>(78,<sp/>5.837),<sp/>(102,<sp/>0)]</highlight></codeline>
<codeline lineno="220"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-31,<sp/>-1,<sp/>1.018)<sp/>to<sp/>(-26,<sp/>-8,<sp/>1.427)<sp/>Distance:<sp/>[(1,<sp/>1),<sp/>(11,<sp/>1),<sp/>(24,<sp/>1.415),<sp/>(37,<sp/>1.417),<sp/>(48,<sp/>1.417),<sp/>(61,<sp/>1.417),<sp/>(78,<sp/>1.418),<sp/>(102,<sp/>0)]</highlight></codeline>
<codeline lineno="221"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-31,<sp/>0,<sp/>1.018)<sp/>to<sp/>(-25,<sp/>-8,<sp/>1.556)<sp/>Energy<sp/><sp/>:<sp/>[(2,<sp/>2.5),<sp/>(1,<sp/>4.559),<sp/>(12,<sp/>2.48),<sp/>(25,<sp/>5.708),<sp/>(38,<sp/>5.656),<sp/>(49,<sp/>5.916),<sp/>(62,<sp/>6.644),<sp/>(79,<sp/>5.08),<sp/>(103,<sp/>0)]</highlight></codeline>
<codeline lineno="222"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-31,<sp/>0,<sp/>1.018)<sp/>to<sp/>(-25,<sp/>-8,<sp/>1.556)<sp/>Distance:<sp/>[(2,<sp/>1),<sp/>(1,<sp/>1.415),<sp/>(12,<sp/>1),<sp/>(25,<sp/>1.417),<sp/>(38,<sp/>1.417),<sp/>(49,<sp/>1.418),<sp/>(62,<sp/>1.42),<sp/>(79,<sp/>1.416),<sp/>(103,<sp/>0)]</highlight></codeline>
<codeline lineno="223"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-31,<sp/>1,<sp/>1.017)<sp/>to<sp/>(-25,<sp/>-6,<sp/>1.678)<sp/>Energy<sp/><sp/>:<sp/>[(3,<sp/>2.52),<sp/>(2,<sp/>2.5),<sp/>(1,<sp/>4.559),<sp/>(12,<sp/>5.759),<sp/>(26,<sp/>5.89),<sp/>(39,<sp/>6.101),<sp/>(50,<sp/>7.008),<sp/>(64,<sp/>5.863),<sp/>(83,<sp/>3.827),<sp/>(104,<sp/>0)]</highlight></codeline>
<codeline lineno="224"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(-31,<sp/>1,<sp/>1.017)<sp/>to<sp/>(-25,<sp/>-6,<sp/>1.678)<sp/>Distance:<sp/>[(3,<sp/>1),<sp/>(2,<sp/>1),<sp/>(1,<sp/>1.415),<sp/>(12,<sp/>1.418),<sp/>(26,<sp/>1.418),<sp/>(39,<sp/>1.418),<sp/>(50,<sp/>1.421),<sp/>(64,<sp/>1.418),<sp/>(83,<sp/>1.002),<sp/>(104,<sp/>0)]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac4fb40ae68308fecdf8d169cd5de5ce6" kindref="member">CompareOutputToExpected</ref>(expected_output,<sp/>output);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod]</highlight></codeline>
<codeline lineno="230" refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a4103f286b08f3a7df95d22349d9db7ab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1a4103f286b08f3a7df95d22349d9db7ab" kindref="member">GenerateAllToAll</ref>()</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>graph<sp/>and<sp/>add<sp/>some<sp/>edges</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_graph" kindref="compound">Graph</ref><sp/>g<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_graph" kindref="compound">Graph</ref>();</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>nodes<sp/>and<sp/>add<sp/>edges<sp/>to<sp/>the<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>[]<sp/>Nodes<sp/>=</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>(0,0,1),</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>(0,0,2),</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>(0,0,3),</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="struct_human_factors_1_1_vector3_d" kindref="compound">Vector3D</ref>(0,0,4)</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};<sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a24d42bc60412118b8eab54d137cabf36" kindref="member">AddEdge</ref>(Nodes[0],<sp/>Nodes[1],<sp/>10);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a24d42bc60412118b8eab54d137cabf36" kindref="member">AddEdge</ref>(Nodes[0],<sp/>Nodes[2],<sp/>30);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a24d42bc60412118b8eab54d137cabf36" kindref="member">AddEdge</ref>(Nodes[0],<sp/>Nodes[3],<sp/>30);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a24d42bc60412118b8eab54d137cabf36" kindref="member">AddEdge</ref>(Nodes[1],<sp/>Nodes[2],<sp/>15);</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a24d42bc60412118b8eab54d137cabf36" kindref="member">AddEdge</ref>(Nodes[3],<sp/>Nodes[1],<sp/>15);</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a24d42bc60412118b8eab54d137cabf36" kindref="member">AddEdge</ref>(Nodes[2],<sp/>Nodes[3],<sp/>5);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compress<sp/>the<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a84a7286932920179d90a63cfd8ada207" kindref="member">CompressToCSR</ref>();</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Generate<sp/>all<sp/>paths<sp/>for<sp/>this<sp/>graph</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/>paths<sp/>=<sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path" kindref="compound">ShortestPath</ref>.<ref refid="class_human_factors_1_1_pathfinding_1_1_shortest_path_1a3ede2597cc17a4f1a130741b0163bbab" kindref="member">DijkstraAllToAll</ref>(g);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>output<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Iterate<sp/>through<sp/>the<sp/>return<sp/>values<sp/>to<sp/>print<sp/>the<sp/>path<sp/>from<sp/>every<sp/>node<sp/>to<sp/>every<sp/>other<sp/>node</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>num_nodes<sp/>=<sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a1a40fc2bab18a5adf42fb7a49ca6ddb9" kindref="member">NumNodes</ref>();</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>start_id<sp/>=<sp/>0;<sp/>start_id<sp/>&lt;<sp/>num_nodes;<sp/>start_id++)</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>end_id<sp/>=<sp/>0;<sp/>end_id<sp/>&lt;<sp/>num_nodes;<sp/>end_id++)</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>If<sp/>this<sp/>is<sp/>a<sp/>node<sp/>to<sp/>itself<sp/>then<sp/>continue</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_id<sp/>==<sp/>end_id)<sp/></highlight><highlight class="keywordflow">continue</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>get<sp/>the<sp/>path<sp/>from<sp/>parent<sp/>id<sp/>to<sp/>child<sp/>id</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>path_index<sp/>=<sp/>(start_id<sp/>*<sp/>num_nodes)<sp/>+<sp/>end_id;</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_pathfinding_1_1_path" kindref="compound">Path</ref><sp/>start_to_end<sp/>=<sp/>paths[path_index];</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Only<sp/>print<sp/>the<sp/>path<sp/>if<sp/>it<sp/>was<sp/>able<sp/>to<sp/>be<sp/>found</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(start_to_end<sp/>!=<sp/></highlight><highlight class="keyword">null</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>String.Format(</highlight><highlight class="stringliteral">&quot;{0}<sp/>-&gt;<sp/>{1}<sp/>:<sp/>{2}&quot;</highlight><highlight class="normal">,<sp/>start_id,<sp/>end_id,<sp/>start_to_end)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>output<sp/>+=<sp/>String.Format(</highlight><highlight class="stringliteral">&quot;{0}<sp/>-&gt;<sp/>{1}<sp/>:<sp/>{2}&quot;</highlight><highlight class="normal">,<sp/>start_id,<sp/>end_id,<sp/></highlight><highlight class="stringliteral">&quot;[None]&quot;</highlight><highlight class="normal">)<sp/>+<sp/></highlight><highlight class="stringliteral">&quot;\n&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Print<sp/>output</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(output);</highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>expected_output<sp/>=<sp/></highlight><highlight class="stringliteral">@&quot;0<sp/>-&gt;<sp/>1<sp/>:<sp/>[(0,<sp/>10),<sp/>(1,<sp/>0)]</highlight></codeline>
<codeline lineno="288"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>-&gt;<sp/>2<sp/>:<sp/>[(0,<sp/>10),<sp/>(1,<sp/>15),<sp/>(2,<sp/>0)]</highlight></codeline>
<codeline lineno="289"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0<sp/>-&gt;<sp/>3<sp/>:<sp/>[(0,<sp/>30),<sp/>(3,<sp/>0)]</highlight></codeline>
<codeline lineno="290"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>-&gt;<sp/>0<sp/>:<sp/>[None]</highlight></codeline>
<codeline lineno="291"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>-&gt;<sp/>2<sp/>:<sp/>[(1,<sp/>15),<sp/>(2,<sp/>0)]</highlight></codeline>
<codeline lineno="292"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>1<sp/>-&gt;<sp/>3<sp/>:<sp/>[(1,<sp/>15),<sp/>(2,<sp/>5),<sp/>(3,<sp/>0)]</highlight></codeline>
<codeline lineno="293"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>-&gt;<sp/>0<sp/>:<sp/>[None]</highlight></codeline>
<codeline lineno="294"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>-&gt;<sp/>1<sp/>:<sp/>[(2,<sp/>5),<sp/>(3,<sp/>15),<sp/>(1,<sp/>0)]</highlight></codeline>
<codeline lineno="295"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>2<sp/>-&gt;<sp/>3<sp/>:<sp/>[(2,<sp/>5),<sp/>(3,<sp/>0)]</highlight></codeline>
<codeline lineno="296"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>-&gt;<sp/>0<sp/>:<sp/>[None]</highlight></codeline>
<codeline lineno="297"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>-&gt;<sp/>1<sp/>:<sp/>[(3,<sp/>15),<sp/>(1,<sp/>0)]</highlight></codeline>
<codeline lineno="298"><highlight class="stringliteral"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>3<sp/>-&gt;<sp/>2<sp/>:<sp/>[(3,<sp/>15),<sp/>(1,<sp/>15),<sp/>(2,<sp/>0)]&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compare<sp/>output<sp/>to<sp/>expected</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac4fb40ae68308fecdf8d169cd5de5ce6" kindref="member">CompareOutputToExpected</ref>(expected_output,<sp/>output);</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>[TestMethod]</highlight></codeline>
<codeline lineno="305" refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac1b76e93ead52d3375910a36155afd9e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="class_humanfctors_1_1_examples_1_1_overall_examples_1ac1b76e93ead52d3375910a36155afd9e" kindref="member">GetEdgeCostExample</ref>()</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Create<sp/>a<sp/>graph<sp/>and<sp/>add<sp/>an<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_graph" kindref="compound">Graph</ref><sp/>g<sp/>=<sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/><ref refid="class_human_factors_1_1_spatial_structures_1_1_graph" kindref="compound">Graph</ref>();</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a24d42bc60412118b8eab54d137cabf36" kindref="member">AddEdge</ref>(0,<sp/>1,<sp/>100);</highlight></codeline>
<codeline lineno="312"><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Compress<sp/>the<sp/>graph<sp/>so<sp/>we<sp/>can<sp/>read<sp/>the<sp/>edge</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1a84a7286932920179d90a63cfd8ada207" kindref="member">CompressToCSR</ref>();</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Retrieve<sp/>the<sp/>cost<sp/>that<sp/>we<sp/>just<sp/>added<sp/>using<sp/>GetCost</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>cost_in_graph<sp/>=<sp/>g.<ref refid="class_human_factors_1_1_spatial_structures_1_1_graph_1abde89644defe692bffea19e3c3aebf8a" kindref="member">GetCost</ref>(0,<sp/>1);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Debug.WriteLine(cost_in_graph);</highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight></codeline>
<codeline lineno="321"><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Assert.AreEqual(100,<sp/>cost_in_graph);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="327"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="src/Csharp/packages/base/overall_examples.cs"/>
  </compounddef>
</doxygen>
